#-*- coding: utf-8 -*-
#—Ç–µ–ª–æ –±–æ—Ç–∞

import config #–ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–≤–æ–π –∫–æ–Ω—Ñ–∏–≥ (—Ç–∞–º —Ç–æ–∫–µ–Ω)
import regularfrazes
import goroskop
import telebot #–ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–ø–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–∞
#from telebot import apihelper
from random import random, randrange
import re #–º–æ–¥—É–ª—å —Å –ø–æ–∏—Å–∫–æ–º –≤ —Ñ–∞–π–ª–µ
import time
import os
from os import path
import datetime
import subprocess
import requests
import json
import sys
#import shutil
from telebot import types
from multiprocessing import Process
from func import get_html
from iishkaAI import gpt_message

os.chdir('/opt/iishka')

#–ü–ï–†–ï–ú–ï–ù–ù–´–ï
bot = telebot.TeleBot(config.token) #–ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
chat_idwork = config.chat_idwork
test_chat = config.test_chat
user_admin = config.user_admin

temp_file = config.temp_file #–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
wordsfile = config.wordsfile #—Ñ–∞–π–ª —Å –±–∞–∑–æ–π –æ—Ç–≤–µ—Ç–æ–≤
helpfile = config.helpfile #—Ñ–∞–π–ª —Å –±–∞–∑–æ–π –æ—Ç–≤–µ—Ç–æ–≤
vusersm = config.vusersm #—Å–ø–∏—Å–æ–∫ –ø–∏–¥–æ—Ä–æ–≤
vusersw = config.vusersw #—Å–ø–∏—Å–æ–∫ —Ç–ø—à–µ–∫
firstfraze = config.firstfraze #–ø–µ—Ä–≤–∞—è —Ñ—Ä–∞–∑–∞ –±–æ—Ç–∞-–ø–∏–¥–æ—Ç–ø
secondfraze = config.secondfraze #–≤—Ç–æ—Ä–∞—è —Ñ—Ä–∞–∑–∞ –±–æ—Ç–∞-–ø–∏–¥–æ—Ç–ø
thirdfraze = config.thirdfraze #—Ç—Ä–µ—Ç—å—è—Ñ—Ä–∞–∑–∞ –±–æ—Ç–∞-–ø–∏–¥–æ—Ç–ø
pidofraze = config.pidofraze #–ø–∏–¥–æ—Ä —Ñ—Ä–∞–∑–∞ –±–æ—Ç–∞-–ø–∏–¥–æ—Ç–ø
tpshfraze = config.tpshfraze #—Ç–ø —Ñ—Ä–∞–∑–∞ –±–æ—Ç–∞-–ø–∏–¥–æ—Ç–ø
alkash = config.alkash #–∏–º—è –∞–ª–∫–∞—à–∞ –≤ —Ñ–∞–π–ª–µ
alkashfr = config.alkashfr #—Ñ—Ä–∞–∑—ã –¥–ª—è –∞–ª–∫–∞—à–∞
listdaupid = config.listdaupid #—Ç–µ–∫—É—â–∏–π –ø–∏–¥–∞—Ä
listdautp = config.listdautp #—Ç–µ–∫—É—â–∞—è –¢–ü
listpolz = config.listpolz #–æ—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø—Ä–æ—à–ª–æ–π —Ä—É–ª–µ—Ç–∫–∏
helppidtp = config.helppidtp #—Ö–µ–ª–ø –ø–∏–¥–æ—Ç–ø–±–æ—Ç–∞
rouletteus = config.rouletteus #—Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–æ–≤ —Ä—É–ª–µ—Ç–∫–∏
shmappc = config.shmappc #—Ñ—Ä–∞–∑—ã —É–±–∏–π—Ü—ã —à–º—ã
shmaotvet = config.shmaotvet #—Ñ—Ä–∞–∑—ã –¥–ª—è —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞ —à–º—ã
privetnew = config.privetnew #fo privet
xuutro = config.xuutro #no comments
#–≤—Ä–µ–º—è
meeteng_io_meet=""

#____________________–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏_______________

def rulles(message): #–ø—Ä–æ–≤–µ—Ä–∫–∞. –ï—Å—Ç—å –ª–∏ ID –∞–¥–º–∏–Ω–æ–≤ –≤ message
	rule = False
	for admin in config.admin_list:
		try:
			if admin in str(message.from_user.id):
				rule = True
				break
			else:
				pass
		except:
			pass
	return rule

def modrulles(message): #–ø—Ä–æ–≤–µ—Ä–∫–∞. –ï—Å—Ç—å –ª–∏ ID –º–æ–¥–µ—Ä–æ–≤ –≤ message
	rule = False
	for moder in config.moder_list:
		try:
			if moder in str(message.from_user.id):
				rule = True
				break
			else:
				pass
		except:
			pass
	return rule

def kalicalls(message): #–í—ã–∑–æ–≤ –ö–∞–ª–∏ –≤ —á–∞—Ç 
	pass


def memasik(message): #–ø–∞—Ä—Å–∏–Ω–≥ –º–µ–º–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —á–∞—Ç
	url = 'https://www.anekdot.ru/random/mem/'
	try:
		text_p = get_html(url) #–ø–æ–ª—É—á–∞–µ–º html —Ç–µ–∫—Å—Ç
		mem_data = str(text_p.split("https://www.anekdot.ru/i/caricatures/normal/")[1].split('.jpg')[0])
		url_mem = "https://www.anekdot.ru/i/caricatures/normal/"+mem_data+'.jpg'
		#print(url_mem)
		bot.send_photo(message.chat.id,url_mem)
	except Exception as e:
		print (e)


def covidget(covid_chat_id,main_str): #–≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–≤–∏–¥ –ø–æ –∑–∞–ø—Ä–æ—Å—É
	try:
		covid_cur = readlistfile("cur_covid.ii")
		conf_plus_list = readlistfile("plus_covid.ii")
		str_covid = main_str+"\n\nüò∑–ó–∞–±–æ–ª–µ–ª–æ: *"+str(covid_cur[0].replace('\n',''))+"* —á–µ–ª.(+"+str(conf_plus_list[0].replace('\n',''))+" —á–µ–ª.)\nüëç–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: *"+str(covid_cur[1].replace('\n',''))+"* —á–µ–ª.(+"+str(conf_plus_list[1].replace('\n',''))+" —á–µ–ª.)\nü¶†–£–º–µ—Ä–ª–æ: *"+str(covid_cur[2].replace('\n',''))+"* —á–µ–ª.(+"+str(conf_plus_list[2].replace('\n',''))+" —á–µ–ª.)\n\n`–ë–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è!‚ù§Ô∏è`\n"+config.str_covidparty
		bot.send_sticker(covid_chat_id,'CAACAgIAAx0CSiOOwwACB4hfs-3i3TRVN8a0H6a3zHSWtnqnbwACXAADVSx4C01PSHLmRFaqHgQ')
		bot.send_message(covid_chat_id,str_covid,parse_mode="Markdown")
	except Exception as e:
		print (e)
		bot.send_message(covid_chat_id,"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ COVID-19...")

def covid(covid_chat_id,main_str): #–ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–≤–∏–¥ –∏ –≤—ã–≤–æ–¥ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ)
	url = 'https://www.newkaliningrad.ru/'
	try:
		text_p = get_html(url) #–ø–æ–ª—É—á–∞–µ–º html —Ç–µ–∫—Å—Ç
		confirum = str(text_p.split("<span class=\"confirm\" style=\"color: #ffa337;\">&#8226;</span>")[1].split('<span class')[0]).replace(' ','').replace('\n','')
		recover = str(text_p.split("<span class=\"recover\" style=\"color: #03c8a4;\">&#8226;</span>")[1].split('<span class')[0]).replace(' ','').replace('\n','')
		deaths = str(text_p.split("<span class=\"death\" style=\"color: #cd0712;\">&#8226;</span>")[1].split('</a>')[0]).replace(' ','').replace('\n','')
		covid_cur = readlistfile("cur_covid.ii")
		conf_plus_list = readlistfile("plus_covid.ii")

		confirum_plus = int(confirum) - int(covid_cur[0].replace('\n',''))
		confirum_plus = str(confirum_plus)

		recover_plus = int(recover) - int(covid_cur[1].replace('\n',''))
		recover_plus = str(recover_plus)

		deaths_plus = int(deaths) - int(covid_cur[2].replace('\n',''))
		deaths_plus = str(deaths_plus)


		data_plus = confirum_plus+'\n'+recover_plus+'\n'+deaths_plus
		rewritetofile("plus_covid.ii",data_plus)
		
		str_covid = main_str+"\n\nüò∑–ó–∞–±–æ–ª–µ–ª–æ: *"+confirum+"* —á–µ–ª.(+"+confirum_plus+" —á–µ–ª.)\nüëç–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: *"+recover+"* —á–µ–ª.(+"+recover_plus+" —á–µ–ª.)\nü¶†–£–º–µ—Ä–ª–æ: *"+deaths+"* —á–µ–ª.(+"+deaths_plus+" —á–µ–ª.)\n\n`–ë–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è!‚ù§Ô∏è`\n"+config.str_covidparty
		f_data = confirum+'\n'+recover+'\n'+deaths
		rewritetofile("cur_covid.ii",f_data)
		bot.send_sticker(covid_chat_id,'CAACAgIAAx0CSiOOwwACB4hfs-3i3TRVN8a0H6a3zHSWtnqnbwACXAADVSx4C01PSHLmRFaqHgQ')
		bot.send_message(covid_chat_id,str_covid,parse_mode="Markdown")
	except Exception as e:
		print (e)
		bot.send_message(covid_chat_id,"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ COVID-19...")

def any_get_all(url_any): #–ª—é–±–æ–π get-–∑–∞–ø—Ä–æ—Å
	response = requests.get(url_any)
	response.encoding = 'utf-8'
	val_brigh = response.text
	return val_brigh

def writetofile(f_name,f_data): #–¥–æ–∑–∞–ø–∏—Å—å –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
	w_f = open(f_name, "a", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	w_f.write(f_data)
	w_f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

def rewritetofile(f_name,f_data): #–ø–µ—Ä–µ–∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞
	w_f = open(f_name, "w+", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	w_f.write(f_data)
	w_f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

def readlistfile(f_name): #—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
	w_f = open(f_name, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	listfw = list(w_f)
	w_f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	return listfw

def readfile(f_name): #—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞
	w_f = open(f_name, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	listfw = w_f.read()
	w_f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	return listfw

def logging(ErType,ErStr): #–ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
	log_f = open('logII.txt', "a", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	now_time = time.time()+21600#—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫
	log_time = time.ctime(now_time) #—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –≤–∏–¥–µ
	log_str = str(log_time)+"  "+ErType+"  "+str(ErStr)+"\n"
	log_f.write(log_str)
	log_f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

def get_html(url): #–ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ html —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞
	headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:45.0) Gecko/20100101 Firefox/45.0'}
	r = requests.get(url,headers = headers)	# –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–æ–¥ Response
	r.encoding = 'utf8'	  #'cp1251'# –£ –º–µ–Ω—è –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π, —è –∑–∞–¥–∞–ª –≤ —Ä—É—á–Ω—É—é
	return str(r.text)			# –í–µ—Ä–Ω–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞ text 

#—Ñ—É–Ω–∫—Ü–∏—è –∑–∞—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ –æ—Ç —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
def clean_text (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in [',', '.', ':', ';', '!', '?']:
				text = text.replace(i,'')
			return text

#—Ñ—É–Ω–∫—Ü–∏—è –∑–∞—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ –æ—Ç —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è, –≤–∫–ª—é—á–∞—è Enter
def clean_textn (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in [',', '.', ':', ';', '!', '?','\n']:#,'(',')'
				text = text.replace(i,'')
			return text

#–æ—á–∏—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ñ—Ä–∞–∑—É –æ—Ç –æ—à–∏–±–æ—á–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
def clean_tostart (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in ['(',')','?','^','*','=',':']:
				text = text.replace(i,'')
			return text

#–æ—á–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç enter
def clean_enter (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in ['\n']:
				text = text.replace(i,'')
			return text

#–æ—á–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç –∏–∏—à–∫–∏
def clean_iishka (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in ['–ò–∏—à–∫–∞ ','–ò–ò—à–∫–∞ ','–∏–∏—à–∫–∞ ',' –ò–∏—à–∫–∞ ',' –ò–ò—à–∫–∞ ',' –∏–∏—à–∫–∞ ','–ò–∏—à–∫–∞, ','–ò–ò—à–∫–∞, ','–∏–∏—à–∫–∞, ','–ò–∏—à–∫–∞. ','–ò–ò—à–∫–∞. ','–∏–∏—à–∫–∞. ',' –ò–∏—à–∫–∞. ',' –ò–ò—à–∫–∞. ',' –∏–∏—à–∫–∞. ']:
				text = text.replace(i,'')
			return text

#–æ—á–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç --namename--
def clean_namename (text,nametext):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in ['--namename--']:
				text = text.replace(i,nametext)
			return text

#–æ—á–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç #
def clean_resh (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in ['#']:
				text = text.replace(i,'')
			return text
#–æ—á–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç –∑–∞–ø—è—Ç—ã—Ö –∏ –∞–ø–æ—Å—Ç—Ä–æ—Ñ–æ–≤
def clean_qvadr (text):
			if not isinstance(text, str):
				raise TypeError('–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç')
			for i in ['[',']','\'']:
				text = text.replace(i,'')
			return text

#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ temp-—Ñ–∞–π–ª
def temp_fw(t_string):
	f = open(temp_file, "w+", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	temp_string = f.write(t_string)
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

#—á–∏—Ç–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ temp-—Ñ–∞–π–ª–∞
def temp_fr():
	f = open(temp_file, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	temp_string = f.read()
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	return temp_string

#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ known-—Ñ–∞–π–ª
def known_fw(t_string,knw_fn):
	f = open(knw_fn, "w+", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	temp_string = f.write(t_string)
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

#—á–∏—Ç–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ known-—Ñ–∞–π–ª–∞
def known_fr(knw_fn):
	f = open(knw_fn, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	temp_string = f.read()
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	return temp_string

#–ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ –∏–ª–∏ —Ç–µ–∫—Å—Ç
def isint(s):
	try:
		int(s)
		return True
	except ValueError:
		return False

#—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, –±–µ–∑ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ —Ñ—Ä–∞–∑—ã
def spl_clean(message):
	spl_all = message+'\n'
	spl = str.lower(spl_all)
	spl = clean_textn(spl)
	return spl

#—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã –∏–∑ –±–∞–∑—ã –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, –±–µ–∑ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
def w_clean(w):
	low_w = str.lower(w) #–ø–µ—Ä–µ–≤–æ–¥–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
	loww_w = clean_textn(low_w)
	return loww_w

#—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –∑–∞–º–µ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
def del_str(str_ing,simvol): #—É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É, –∫–æ–≥–¥–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞–ª–æ
	words_file = open(wordsfile, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
	file_string = words_file.read()
	words_file.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

	file_string = (re.sub(('\n'+str_ing), simvol, file_string)) #–µ—Å–ª–∏ —á—Ç–æ —Ç–æ —Ç—É—Ç —É–±—Ä–∞—Ç—å \n file_string = (re.sub(('\n'+str_ing), "\n", file_string))

	words_file = open(wordsfile, "w", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
	file_string = words_file.write(file_string)
	words_file.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

#—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–µ–º–ø
def del_strS(str_ing,simvol): #—É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É, –∫–æ–≥–¥–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞–ª–æ
	f = open(wordsfile,'r', encoding = "utf-8")
	o = open(temp_file,'w+', encoding = "utf-8")
	while 1:
	  line = f.readline()
	  if not line: break
	  str_ing = clean_enter(str_ing)+'\n'
	  line = line.replace(str_ing,simvol)
	  o.write(line)
	o.close()
	f.close()

#–ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑ —Ç–µ–º–ø–∞ –≤ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
def rewrite_ft(): #—É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É, –∫–æ–≥–¥–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞–ª–æ
	f = open(temp_file,'r', encoding = "utf-8")
	text = f.read()
	f.close()
	o = open(wordsfile,'w+', encoding = "utf-8")
	o.write(text)
	o.close()

def goroskop_find(message): #–æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
	if '!–æ–≤–µ–Ω' in message.text.lower():
		horo_str = goroskop.aries
	elif '!—Ç–µ–ª–µ—Ü' in message.text.lower():
		horo_str = goroskop.little_bodies
	elif '!–±–ª–∏–∑–Ω–µ—Ü' in message.text.lower():
		horo_str = goroskop.twins
	elif '!—Ä–∞–∫' in message.text.lower():
		horo_str = goroskop.cancer
	elif '!–ª–µ–≤' in message.text.lower():
		horo_str = goroskop.lion
	elif '!–¥–µ–≤' in message.text.lower():
		horo_str = goroskop.maiden
	elif '!–≤–µ—Å—ã' in message.text.lower():
		horo_str = goroskop.scales
	elif '!—Å–∫–æ—Ä–ø–∏–æ–Ω' in message.text.lower():
		horo_str = goroskop.scorpion
	elif '!—Å—Ç—Ä–µ–ª–µ—Ü' in message.text.lower():
		horo_str = goroskop.sagittarius
	elif '!–∫–æ–∑–µ—Ä–æ–≥' in message.text.lower():
		horo_str = goroskop.capricorn
	elif '!–≤–æ–¥–æ–ª–µ' in message.text.lower():
		horo_str = goroskop.aquarius
	elif '!—Ä—ã–±—ã' in message.text.lower():
		horo_str = goroskop.fishes
	elif '!—Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø' in message.text.lower():
		horo_str = readfile('tolgoroskop.txt')
	else:
		pass
	bot.send_message(message.chat.id,horo_str,parse_mode="Markdown")


#____________________________________–ö–æ–Ω–µ—Ü –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π___________________________________


#____________________________________–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞_________________________________
#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã Start
@bot.message_handler(commands=['start'])
def handle_start(message):
	i = randrange(0,5)
	if i == 0:
		bot.send_message(message.chat.id, '–î–∞, –¥–∞ —è –Ω–∞ —Å–≤—è–∑–∏^^')
	elif i == 1:
		bot.send_message(message.chat.id, '–í—ã —á—Ç–æ —Ç–æ —Ö–æ—Ç–µ–ª–∏?')
	elif i == 2:
		bot.send_message(message.chat.id, '–Ø –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º –∏ –º–æ–ª—á–∞–ª–∏–≤–æ —Å–ª–µ–∂—É –∑–∞ –≤–∞–º–∏))')
	elif i == 3:
		bot.send_message(message.chat.id, '–í—ã –º–µ–Ω—è –∑–≤–∞–ª–∏?')
	elif i == 4:
		bot.send_message(message.chat.id, '–û, –ø—Ä–æ –º–µ–Ω—è –≤—Å–ø–æ–º–Ω–∏–ª–∏) –ö–∞–∫–∞—è –º–∏–ª–æ—Ç–∞^^')
	else:
		pass

#–≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ –≥–∏—Ñ—É
@bot.message_handler(commands=['kldgif'])
def handle_kldgif(message):
	bot.send_animation(message.chat.id,'BQACAgIAAxkBAAJlhF_jpdlutPJxspqoCIlhan_WgpKKAAIUCAAC6M4gS_k_eWC2OeGOHgQ')
	bot.send_message(message.chat.id,'¬Ø\_(„ÉÑ)_/¬Ø')

#–≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ —Å–º–∞–π–ª–∏–∫
@bot.message_handler(commands=['shrug'])
def handle_shrug(message):
	bot.send_message(message.chat.id,'¬Ø\_(„ÉÑ)_/¬Ø')

#–≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ —Å–º–∞–π–ª–∏–∫
@bot.message_handler(commands=['song'])
def handle_song(message): #–ø–∞—Ä—Å–∏–Ω–≥ –º–æ–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞ –∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–µ—Å–Ω—é –≤ —á–∞—Ç
	url = 'https://music.yandex.ru/users/vkeduardyo/playlists/3'
	try:
		text_p = get_html(url) #–ø–æ–ª—É—á–∞–µ–º html —Ç–µ–∫—Å—Ç
		json_mus = str(text_p.split("\"track\":")[1].split(']')[0])+"]"
		json_list = json.loads(json_mus)
		last_song = "–ü–µ—Å–µ–Ω–∫–∞ –æ—Ç Xottabb14üòè:\n"+str(json_list[0]["name"])+"\n"+str(json_list[0]["url"])
		bot.send_message(chat_idwork,last_song)
	except:
		bot.send_message(message.chat.id,'–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å(')

#–∑–∞–¥–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–µ—Ä–∞ –æ–±—É—á–µ–Ω–∏—è
@bot.message_handler(commands=['timer'])
def handle_timer(message):
	send = bot.send_message(message.chat.id,'–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ —á–∏—Å–ª–æ–º –æ—Ç 5 –¥–æ 60 —Å–µ–∫.:')
	bot.register_next_step_handler(send, write_timer) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è –¥–ª—è —Ç–∞–π–º–µ—Ä–∞

#–∫–æ–º–∞–Ω–¥–∞ –≤—Å—Ç–∞–≤–∫–∏ —Ñ—Ä–∞–∑—ã
@bot.message_handler(commands=['insert'])
def handle_insert(message):
	send = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:')
	bot.register_next_step_handler(send, insertf) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è –∑–∞–º–µ–Ω—ã

#–∫–æ–º–∞–Ω–¥–∞ –∑–∞–º–µ–Ω—ã —Ñ—Ä–∞–∑—ã
@bot.message_handler(commands=['replace'])
def handle_replace(message):
	send = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ—á–Ω—É—é —Ñ—Ä–∞–∑—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–µ –≤ –±–∞–∑–µ:')
	bot.register_next_step_handler(send, replacef) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è –∑–∞–º–µ–Ω—ã

#–∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã
@bot.message_handler(commands=['del'])
def handle_del(message):
	send = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ—á–Ω—É—é —Ñ—Ä–∞–∑—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:')
	bot.register_next_step_handler(send, del_fraze) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã Info
@bot.message_handler(commands=['help'])
def handle_help(message):
	f = open(helpfile, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	help_string = f.read()
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	bot.send_message(message.chat.id,help_string)
	f = open(helppidtp, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	helppt_string = f.read()
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	bot.send_message(message.chat.id,helppt_string)

#–≤—ã–≤–æ–¥ raw —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(commands=['rawmessage'])
def handle_rawmessage(message):
	mymess = str(message)
	bot.send_message(message.chat.id,mymess)
#raw –≤ —Ñ–∞–π–ª
@bot.message_handler(commands=['rawsave'])
def handle_rawsave(message):
	f = open('rawsave.ii', "w+", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
	f.write(str(message))
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	f_raw = open('rawsave.ii',"r", encoding = "utf-8")
	bot.send_document(message.chat.id, f_raw)
	f_raw.close()
	bot.send_message(message.chat.id,"–î–∞–Ω–Ω—ã–µ –≤—ã–≥—Ä—É–∂–µ–Ω—ã...")

#–≤—ã–≤–æ–¥–∏–º —Ä–µ–π—Ç–∏–Ω–≥ —á–∞—Ç–∞
@bot.message_handler(commands=['rating'])
def handle_allrating(message):
	lvlfile = open('reiting.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	lvllist = list(lvlfile)
	lvlfile.close()
	numrow = 0
	textlvls = "ü§ò–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞:ü§ò\n>>>>>>>>>\n"
	num = 0
	for i in lvllist:
		ii = clean_enter(i)
		if numrow % 2 == 0:
			num=num+1
			lvl_znach = clean_enter(lvllist[numrow+1])
			textlvls = textlvls+str(num)+". "+str(ii)+" ----- ("+lvl_znach+")\n"
		numrow = numrow+1
	textlvls = textlvls+">>>>>>>>>"
	bot.send_message(message.chat.id, textlvls)

#–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–π–¥–∏ —á–∞—Ç–∞
@bot.message_handler(commands=['idchat'])
def handle_idchat(message):
	f = open('tempid.ii','w+', encoding = "utf-8")#vusersm
	idchat = str(message.chat.id)
	f.write(idchat)
	f.close()
	bot.send_message(message.chat.id, idchat)

#–≤–æ–æ–±—â–µ —Ö–∑ —á—Ç–æ —ç—Ç–æ
@bot.message_handler(commands=['onemessage'])
def handle_onemessage(message):
	mymess = str(bot.parse_entitys)
	bot.send_message(message.chat.id,mymess)

#—Å–æ–∑–¥–∞—Ç—å –æ—â–∏–±–∫—É –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞
@bot.message_handler(commands=['errortest'])
def handle_errortest(message):
	x = 2
	y = x/0
	bot.send_message(message.chat.id,'–í—Ä–æ–¥–µ –Ω–µ —É–ø–∞–ª^^ –ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ XD')

#pin —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(commands=['pin'])
def handle_pinmessage(message):
	if rulles(message) == True:
			try:
				bot.pin_chat_message(message.chat.id,message.reply_to_message.message_id)
			except Exception as e:
				print("ExceptionpinError:", e)
				logging("ERROR_PIN",e)
				bot.send_message(message.chat.id,'`–•—É–µpin`ü§¶‚Äç‚ôÇÔ∏è',parse_mode="Markdown")
	else:
		bot.send_message(message.chat.id,'@pipinsorry?',parse_mode="Markdown")

#unpin —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(commands=['unpin'])
def handle_unpinmessage(message):
	meeterid = known_fr('meeter.ii')
	if rulles(message) == True:
		try:
			bot.unpin_chat_message(message.chat.id)
		except Exception as e:
			print("ExceptionUnpinError:", e)
			logging("ERROR_UNPIN",e)
			bot.send_message(message.chat.id,'`–ù–µ—á–µ–≥–æ UNPIN–∏—Ç—å`ü§¶‚Äç‚ôÇÔ∏è',parse_mode="Markdown")
	elif meeterid in str(message.from_user.id):
		try:
			bot.unpin_chat_message(message.chat.id)
		except Exception as e:
			print("ExceptionUnpinError2:", e)
			logging("ERROR_UNPIN_2",e)
			bot.send_message(message.chat.id,'`–ù–µ—á–µ–≥–æ UNPIN–∏—Ç—å`ü§¶‚Äç‚ôÇÔ∏è',parse_mode="Markdown")

	else:
		bot.send_message(message.chat.id,'–ê–≥–∞, —Å–µ–π—á–∞—Å. –ù–∞–∏–≤–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ...ü§¶‚Äç‚ôÇÔ∏è')


@bot.message_handler(commands=['ruleskld'])
def handle_ruleskld(message):
	f = open('ruleskld.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	help_string = f.read()
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	bot.send_message(message.chat.id,help_string,reply_to_message_id=message.message_id)


#____________________________________–ö–æ–Ω–µ—Ü –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞_________________________________


#____________________________________–û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ë–û–¢–ê________________________________________
#—Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ñ—Ä–∞–∑—ã
def insertf(message):
	words_file = open(wordsfile, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	file_string = list(words_file)
	words_file.close()
	spl = spl_clean(message.text)
	spl = clean_tostart (spl)
	spl = '#'+spl
	for w in file_string:
		io=0
		lw = w_clean(w)
		if spl == lw:
			io=0
			temp_fw (w)
			sendd = bot.send_message(message.chat.id,'–Ø –∑–Ω–∞—é —Ç–∞–∫—É—é —Ñ—Ä–∞–∑—É. –í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É-–æ—Ç–≤–µ—Ç:')
			bot.register_next_step_handler(sendd, ins_fraze) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
			break
		else:
			io=1
	if io ==1:
		bot.send_message(message.chat.id,'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π —Ñ—Ä–∞–∑—ã –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—É—á–∏—Ç—å –º–µ–Ω—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –º–Ω–µ —ç—Ç—É —Ñ—Ä–∞–∑—É –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ.')
		io=0
	else:
		pass

#—Ñ—É–Ω–∫—Ü–∏—è "—Å–∫–ª–µ–∏–≤–∞–Ω–∏—è" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ñ—Ä–∞–∑—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ—Ä–∞–∑–æ–π
def ins_fraze(message):
	str_ing = temp_fr()
	if str(message.content_type) != 'document':
		try:
			repl_clean = message.text#clean_skob (message.text)
			rep_str = str_ing+repl_clean+'\n'
			del_strS(str_ing,rep_str)
			rewrite_ft()
			bot.send_message(message.chat.id,'–§—Ä–∞–∑–∞-–æ—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
		except:
			pass
	else:
		try:
			repl_clean = 'its_document_id---'+str(message.document.file_id)
			rep_str = str_ing+repl_clean+'\n'
			del_strS(str_ing,rep_str)
			rewrite_ft()
			bot.send_message(message.chat.id,'–ì–∏—Ñ–∫–∞-–æ—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
		except:
			pass

#—Ñ—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã —Ñ—Ä–∞–∑—ã –≤ —Ñ–∞–π–ª–µ –±–∞–∑—ã –æ—Ç–≤–µ—Ç–æ–≤
def replacef(message):
	words_file = open(wordsfile, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	file_string = list(words_file)
	words_file.close()
	spl = spl_clean(message.text)
	for w in file_string:
		io=0
		lw = w_clean(w)
		if spl == lw:
			io=0
			temp_fw(w)
			sendd = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É –¥–ª—è –∑–∞–º–µ–Ω—ã:')
			bot.register_next_step_handler(sendd, re_fraze) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è –∑–∞–º–µ–Ω—ã
			break
		else:
			io=1
	if io ==1:
		bot.send_message(message.chat.id,'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π —Ñ—Ä–∞–∑—ã –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µ –æ—Ç–≤–µ—Ç–æ–≤.')
		io=0
	else:
		pass

#—Ñ—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ—Ä–∞–∑—ã
def re_fraze(message):
	repl_clean = message.text#clean_skob (message.text)
	rep_str = repl_clean+'\n' #'\n'+
	str_ing = temp_fr()
	del_strS(str_ing,rep_str)
	rewrite_ft()
	bot.send_message(message.chat.id,'–§—Ä–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!')

#—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã –∏–∑ –±–∞–∑—ã –æ—Ç–≤–µ—Ç–æ–≤
def del_fraze(message):
	words_file = open(wordsfile, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
	file_string = list(words_file)
	words_file.close()
	spl = spl_clean(message.text)
	for w in file_string:
		io=0
		lw = w_clean(w)
		if spl == lw:
			io=0
			if w != '-end-':
				del_strS (w,'') #(message.text)
				rewrite_ft()
				bot.send_message(message.chat.id,'–§—Ä–∞–∑–∞ —É–¥–∞–ª–µ–Ω–∞!')
			else:
				pass
			break
		else:
			io=1
	if io ==1:
		bot.send_message(message.chat.id,'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π —Ñ—Ä–∞–∑—ã –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µ –æ—Ç–≤–µ—Ç–æ–≤.')
		io=0
	else:
		pass

#______________________________–¢–ê–ô–ú–ï–†_______________________
#—Ñ—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
def write_timer(message): #–º–µ–Ω—è–µ–º –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞
	e = isint(message.text) #–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á–∏—Å–ª–æ –ª–∏?
	if e == True:
		d = int(message.text)
		a = 0
		b = 0
		c = 0
		if d < 61: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 5 –¥–æ 60 —Å–µ–∫
			a=1
		else:
			pass
		if d > 4:
			b = 2
		else:
			pass
		c = a+b
		if c == 3: #–µ—Å–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω –≤–µ—Ä–Ω—ã–π - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
			timer_file = open("timer.ii", "w+", encoding = "utf-8")
			timer_file.write(message.text)
			timer_file.close()
			time_s = "–í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–æ: "+message.text
			bot.send_message(message.chat.id, time_s)
		else:
			bot.send_message(message.chat.id, '–í—ã —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞...')
	else:
		bot.send_message(message.chat.id, "–í—ã –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç, –Ω–µ –æ–±–º–∞–Ω—ã–≤–∞–π—Ç–µ –º–µ–Ω—è!")

#—á–∏—Ç–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∏–∑ —Ñ–∞–π–ª–∞
def t_timer():
	words_file = open("timer.ii", "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	file_string = words_file.read()
	words_file.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	return file_string
#_________________________________–ö–æ–Ω–µ—Ü –¢–ê–ô–ú–ï–†–ê______________________


#_______________________________________________–†–ê–ó–ì–û–í–û–†–ù–´–ï –§–£–ù–ö–¶–ò–ò_______________________________
#—Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑—É –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞
def add_ans(message):
	ss = len(re.findall(r"[\n']+?", open(wordsfile, "r", encoding = "utf-8").read())) #–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
	words_file = open(wordsfile, "a", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
	cl_message = clean_iishka (message.text)
	start_fraze = clean_tostart ('\n'+'#'+cl_message)#
	words_file.write(start_fraze)#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ñ—Ä–∞–∑—É ('\n'+'#'+message.text)#
	words_file.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	t_str = t_timer()
	sent = bot.send_message(message.chat.id, '–ò—Ç–∞–∫, —Å–ª—É—à–∞—é –≤ —Ç–µ—á–µ–Ω–∏–µ ' +t_str+' —Å–µ–∫. –ü–æ—Ç–æ–º —è –≤—Å–µ –∑–∞–±—É–¥—É!^^. (–ò–ª–∏ –≤–≤–µ–¥–∏ "–û–¢–ú–ï–ù–ê"):')
	bot.register_next_step_handler(sent, obrab) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞
	time.sleep(int(t_str)) #—Ç–∞–π–º–µ—Ä
	bot.clear_step_handler(sent) #–æ—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ —Ç–∞–π–º–µ—Ä–∞
	s = len(re.findall(r"[\n']+?", open(wordsfile, "r", encoding = "utf-8").read())) #–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –∫–æ–Ω—Ü–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
	if s == ss+1:
		mess_clean = '#'+cl_message
		messa_clean = clean_tostart(mess_clean)
		del_str (messa_clean,'')#('#'+message.text,'')
	else:
		pass

# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ñ—Ä–∞–∑—É –≤ —Ñ–∞–π–ª
def obrab(message):
	#print(str(message))
	if str(message.content_type) != 'document':
		try:
			can_cel = str.lower(message.text)
			if can_cel != '–æ—Ç–º–µ–Ω–∞':
				words_file = open(wordsfile, "a", encoding = "utf-8")
				messs_clean = clean_iishka(message.text) #clean_skob ()
				obrab_ans = '\n'+messs_clean+'\n'
				words_file.write(obrab_ans)#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ—Ä–∞–∑—É
				words_file.write('-end-')#—Å—Ç–∞–≤–∏–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–µ
				words_file.close()
				bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, —è –∑–∞–ø–æ–º–Ω—é^^')
			else:
				bot.send_message(message.chat.id, '–û–ö! –ó–∞–±—ã–ª–∏^^')
		except:
			pass
	else:
		try:
			can_cel = str(message.document.file_id)
			if can_cel != '–æ—Ç–º–µ–Ω–∞':
				words_file = open(wordsfile, "a", encoding = "utf-8")
				obrab_ans = '\n'+'its_document_id---'+can_cel+'\n'
				words_file.write(obrab_ans)#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ—Ä–∞–∑—É
				words_file.write('-end-')#—Å—Ç–∞–≤–∏–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–µ
				words_file.close()
				bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, —è –∑–∞–ø–æ–º–Ω—é^^')
			else:
				bot.send_message(message.chat.id, '–û–ö! –ó–∞–±—ã–ª–∏^^')
		except:
			pass

def word_list(message):
	words_file = open(wordsfile, "r", encoding = "utf-8")
	com_and = list(words_file)
	n=0
	spl_all = clean_iishka (message.text)
	spl_all = spl_all +'\n'
	spl = str.lower(spl_all)
	spl = clean_text(spl)
	spl = clean_tostart (spl)
	spl = '#'+spl #–ø–æ–º–µ—á–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—Ä–∞–∑—É!!!!!!!!!!!!!!
	for w in com_and: #–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –≤ –ø–æ–ª–Ω–æ–º —Å–ø–∏—Å–∫–µ
		io = 0 #–µ—Å–ª–∏ 0 —Ç–æ –∏—â–µ–º –æ—Ç–≤–µ—Ç
		low_w = str.lower(w) #str.lower #–ø–µ—Ä–µ–≤–æ–¥–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
		loww_w = clean_text(low_w)
		if spl == loww_w: #–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –≤ –±–∞–∑–µ
			spl_s = com_and[n:len(com_and)] #—Ä–µ–∂–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ –¥–æ –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞
			i = 0
			end_ans = ('-end-\n')
			for ww in spl_s:
				if ww == end_ans: #–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –æ—Ç–≤–µ—Ç—ã –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–≥–æ –∫–æ–Ω–µ—Ü
					break
				else:
					pass
				i += 1
			nn = n+1
			ii = n+i-1
			if nn < ii: #!–µ—Å–ª–∏ –Ω–µ —Ç–∞–∫, —Ç–æ —Ä–∞–Ω–≥ —Ä–∞–Ω–¥–æ–º–∞ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω –º–∏–Ω—É—Å—É –∏–ª–∏ –Ω—É–ª—é
				answer = randrange(nn, ii) #–∑–∞–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç–µ–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –¥–æ —Å—Ç—Ä–æ–∫–∏ -end-
				if 'its_document_id---' in com_and[answer]:
					gif_str_id = com_and[answer].replace('its_document_id---','').replace('\n','')
					bot.send_animation(message.chat.id,gif_str_id)
				else:
					bot.send_message(message.chat.id, com_and[answer],reply_to_message_id=message.message_id)
				words_file.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
				break
			elif nn == ii:
				answer = ii #–∑–∞–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç–µ–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –¥–æ —Å—Ç—Ä–æ–∫–∏ -end-
				if 'its_document_id---' in com_and[answer]:
					gif_str_id = com_and[answer].replace('its_document_id---','').replace('\n','')
					bot.send_animation(message.chat.id,gif_str_id)
				else:
					bot.send_message(message.chat.id, com_and[answer],reply_to_message_id=message.message_id)
				words_file.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
				break
			else:
				pass
		else:
			io = 1 #–µ—Å–ª–∏ 1 —Ç–æ –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç
		n += 1

	if io == 1:
		'''not_ans = (message.from_user.first_name+', –≤ –º–æ–µ–π –±–∞–∑–µ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Ç–æ—á–Ω—É—é —Ñ—Ä–∞–∑—É, –∫–æ—Ç–æ—Ä–æ–π —è –¥–æ–ª–∂–µ–Ω –±—ã–ª –í–∞–º –æ—Ç–≤–µ—Ç–∏—Ç—å.')#message.from_user.first_name - –≤—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ
		bot.send_message(message.chat.id, not_ans)
		add_ans(message) #–¥–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –±–∞–∑—ã
 		'''
		message_text = gpt_message(message.text)
		bot.send_message(message.chat.id,message_text,reply_to_message_id=message.message_id)
		io=0
	else:
		pass
	words_file.close()

#_____________________________________________–ü–ò–î–û-–¢–ü-–ë–û–¢_________________________________________________________
#—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
def sex_all(message):
	sex = 0
	sexw = 0
	f = open(vusersm,'r', encoding = "utf-8")#vusersm
	spisokp = list(f)
	f.close()
	#ff = str(spisokp)
	#bot.send_message(message.chat.id,sex)
	name = message.from_user.username+"\n"
	for w in spisokp:
		if w==name:
			bot.send_message(message.chat.id,'–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ü–ò–î–û–†–û–í!')
			sex = 0
			break
		else:
			sex = 1
	f = open(vusersw,'r', encoding = "utf-8")#vusersm
	spisokp = list(f)
	f.close()
	name = message.from_user.username+'\n'
	for w in spisokp:
		if w==name:
			bot.send_message(message.chat.id,'–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¢–ü–®–ï–ö!')
			sexw = 0
			break
		else:
			sexw = 1
	sex_all = sex+sexw
	return sex_all


#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã regrull - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä—É–ª–µ—Ç–∫–µ (–≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
@bot.message_handler(commands=['regrull'])
def handle_regrull(message):
	s = sex_all(message)
	if s == 2:
		msg = bot.send_message(message.chat.id,'–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é... –ì–æ–≤–æ—Ä–∏, –∫—Ç–æ —Ç—ã –ø–æ –∂–∏–∑–Ω–∏? "–ú—É–∂–∏–∫" –∏–ª–∏ "–î–µ–≤—á—É–ª—è"? –í–≤–µ–¥–∏ –º–Ω–µ –æ—Ç–≤–µ—Ç:')
		bot.register_next_step_handler(msg, process_step)
		ss = sex_all(message)
		if ss == 1:
			bot.clear_step_handler(msg)
		elif ss == 0:
			bot.clear_step_handler(msg)
		else:
			pass

	elif s==1:
		pass
	else:
		pass

#–¥–æ–±–∞–≤–ª—è–µ–º –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
def process_step(message):
	name = message.from_user.username+'\n'+'0'+'\n'
	msg_mwan = str.lower(message.text)
	msg_mwan = clean_textn (msg_mwan)
	msg_mwan = clean_tostart (msg_mwan)
	msg_mwan = clean_resh (msg_mwan)
	if msg_mwan=='–º—É–∂–∏–∫':
		#sex = 1
		o = open(vusersm,'a', encoding = "utf-8")
		o.write(name)
		o.close()
		bot.send_message(message.chat.id, message.from_user.first_name)
		bot.send_message(message.chat.id,'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ü–ò–î–û–†–û–í!')
	elif msg_mwan=='–¥–µ–≤—á—É–ª—è':
		#sex = 0
		o = open(vusersw,'a', encoding = "utf-8")
		o.write(name)
		o.close()
		bot.send_message(message.chat.id, message.from_user.first_name)
		bot.send_message(message.chat.id,'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¢–ü–®–ï–ß–ï–ö!')
	else:
		bot.send_message(message.chat.id,'–≠–π, –Ω–µ —Ç–æ—Ä–º–æ–∑–∏ —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏! –ó–∞–±–∏–≤–∞–µ—à—å –º–Ω–µ –µ—Ä—É–Ω–¥–æ–π –≥–æ–ª–æ–≤—É. –ü–∏—à–∏ —Ç–æ—á–Ω–æ: –ú—É–∂–∏–∫ —Ç—ã –∏–ª–∏ –î–µ–≤—á—É–ª—è? –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å–Ω–æ–≤–∞ —Å –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...')

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã delrull - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä—É–ª–µ—Ç–∫–µ (–≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
@bot.message_handler(commands=['delrull'])
def handle_delrull(message):
	s = sex_all(message)
	if s == 2:
		bot.send_message(message.chat.id,'–í—ã –µ—â–µ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –±–∞–∑–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ü–ò–î–û–†–û–í –∏–ª–∏ –¢–ü–®–ï–ß–ï–ö!')
	elif s==1:
		bot.send_message(message.chat.id,'–£–¥–∞–ª—è—é –≤–∞—Å –∏–∑ –±–∞–∑—ã...')
		name = message.from_user.username+'\n'

		#del_pids(name,vusersm)
		#rewrite_ftlist(vusersm)
		#del_pids(name,vusersw)
		del_pidsS(name,vusersm)
		rewrite_ftlist(vusersm)
		del_pidsS(name,vusersw)
		rewrite_ftlist(vusersw)
	else:
		pass


#_______________________________________–ü–†–û–ë–ê-–°–†–ê–ë–û–¢–ê–õ–û______________
def del_pidsS(str_ing,base_s): #—É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É, –∫–æ–≥–¥–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞–ª–æ
	f = open(base_s,'r', encoding = "utf-8")
	names = list(f)
	f.close()
	n=0
	for w in names:
		if w==str_ing:
			break
		else:
			pass
		n+=1

	newnames = names[0:(n)]
	nnewlist = names[(n+2):len(names)]
	f = open(temp_file,'w+', encoding = "utf-8")
	for w in newnames:
		f.write(w)
	for w in nnewlist:
		f.write(w)
	f.close()

#–ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –∏–∑ —Ç–µ–º–ø–∞ –≤ –ª–∏—Å—Ç —é–∑–≤–µ—Ä–µ–π
def rewrite_ftlist(file):
	f = open(temp_file,'r', encoding = "utf-8")
	text = f.read()
	f.close()
	o = open(file,'w+', encoding = "utf-8")
	o.write(text)
	o.close()

#–ü–æ—É—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
def str_from_file (file):
	f = open(file, "r", encoding = "utf-8")
	spis = list(f)
	f.close()
	return spis

#—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–π —Ñ—Ä–∞–∑—ã
def select_fr(frlist):
	ffi = randrange(0,len(frlist))
	ffraze = frlist[ffi]
	return ffraze

#–∫–æ–º–∞–Ω–¥–∞ –ø–æ –ø–æ–∏—Å–∫—É –ø–∏–¥–æ—Ä–∞—Å–æ–≤ –∏ —Ç–ø—à–µ–∫
@bot.message_handler(commands=['pidotp'])
def handle_pidotp(message):
	now_time = time.time()#—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫
	t_timet = time.ctime(now_time) #—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –≤–∏–¥–µ
	point_time = str_from_file (listpolz)
	str_point = str(point_time) #–≤—Ä–µ–º—è –∏–∑ —Ñ–∞–π–ª–∞ —Å—Ç—Ä–æ–∫–∞


	tttt = clean_qvadr (str_point)
	ttt=time.strptime(tttt)
	#bot.send_message(message.chat.id,tttt)
	str_ttt = time.asctime (ttt)
	fl_tm = time.mktime(ttt)+86400
	#bot.send_message(message.chat.id,str_ttt)
	trtime=str(now_time)
	#bot.send_message(message.chat.id,trtime)
	if now_time > fl_tm:
		f = open(listdaupid,'w+', encoding = "utf-8")
		f.write('empty')
		f.close()
		f = open(listdautp,'w+', encoding = "utf-8")
		f.write('empty')
		f.close()
	else:
		pass
	now_pid = stat_read(listdaupid)
	if now_pid == 'empty':
		#–∏—â–µ–º –ø–∏–¥–æ—Ä–∞—Å–æ–≤
		ffraze = select_fr(firstfraze)#–ø–µ—Ä–≤–∞—è —Ñ—Ä–∞–∑–∞
		bot.send_message(message.chat.id,ffraze)
		sfraze = select_fr(secondfraze)#–≤—Ç–æ—Ä–∞—è —Ñ—Ä–∞–∑–∞
		bot.send_message(message.chat.id,sfraze)
		tfraze = select_fr(thirdfraze)#—Ç—Ä–µ—Ç—å—è —Ñ—Ä–∞–∑–∞
		bot.send_message(message.chat.id,tfraze)

		pidors = str_from_file(vusersm)
		len_f = (len(pidors)-1)
		p = randrange(1,len_f,2)
		p = randrange(1,len_f,2)
		p = randrange(1,len_f,2)
		#–ó–î–ï–°–¨ –ü–†–û–í–ï–†–Ø–ú, –í –ß–ê–¢–ï –õ–ò –Æ–ó–ï–†

		#–∑–¥–µ—Å—å –Ω–∞—á–∏—Å–ª—è–µ–º –±–∞–ª–ª—ã –¥–ª—è p
		p_str = pidors[p]
		pn_str = clean_enter(p_str)
		nowpid_file = open(listdaupid, "w+", encoding = "utf-8")
		nowpid_file.write(pn_str)
		nowpid_file.close()
		points = points_pidsS(p_str,vusersm)
		points_int = int(points)+1#–Ω–∞—á–∏—Å–ª—è–µ–º –±–∞–ª–ª
		points_str = str(points_int)#–¥–µ–ª–∞–µ–º –Ω–æ–≤—ã–µ –±–∞–ª–ª—ã —Å—Ç—Ä–æ–∫–æ–π
		rep_points(p_str,points_str,vusersm)
		rewrite_ftlist(vusersm)

		pidfraze = select_fr(pidofraze)#–ª–æ–≤–∏–º –ø–∏–¥–æ—Ä–∞ —Ñ—Ä–∞–∑–∞
		pidor = pidfraze+'@'+pidors[p]
		bot.send_message(message.chat.id,pidor)
	else:
		now_fraze = '–°–æ–≥–ª–∞—Å–Ω–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –ø–∏–¥–æ—Ä –¥–Ω—è - '+now_pid
		bot.send_message(message.chat.id,now_fraze)

	now_tp = stat_read(listdautp)
	if now_tp == 'empty':
		#–∏—â–µ–º —Ç–ø—à–µ–∫
		tpps = str_from_file(vusersw)
		len_f = (len(tpps)-1)
		p = randrange(1,len_f,2)
		p = randrange(1,len_f,2)
		p = randrange(1,len_f,2)
		#–∑–¥–µ—Å—å –Ω–∞—á–∏—Å–ª—è–µ–º –±–∞–ª–ª—ã –¥–ª—è p
		p_str =tpps[p]
		pn_str = clean_enter(p_str)
		nowtp_file = open(listdautp, "w+", encoding = "utf-8")
		nowtp_file.write(pn_str)
		nowtp_file.close()
		points = points_pidsS(p_str,vusersw)
		points_int = int(points)+1
		points_str = str(points_int)#–¥–µ–ª–∞–µ–º –Ω–æ–≤—ã–µ –±–∞–ª–ª—ã —Å—Ç—Ä–æ–∫–æ–π
		rep_points(p_str,points_str,vusersw)
		rewrite_ftlist(vusersw)

		tpfraze = select_fr(tpshfraze)#–ª–æ–≤–∏–º —Ç–ø —Ñ—Ä–∞–∑–∞
		tpp = tpfraze+'@'+tpps[p]
		bot.send_message(message.chat.id,tpp)
		#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤ —Ñ–∞–π–ª
		f = open(listpolz,'w+', encoding = "utf-8")
		#ow_time=time.asctime(now_time)
		f.write(t_timet)
		f.close()

	else:
		nowtp_fraze = '–°–æ–≥–ª–∞—Å–Ω–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –¢–ü—à–∫–∞ –¥–Ω—è - '+now_tp
		bot.send_message(message.chat.id,nowtp_fraze)
		hours = int(((fl_tm-now_time)//60)//60)
		hours_str = str(hours)
		minutes = int((fl_tm-now_time)//60)-(hours*60)
		minutes_str = str(minutes)
		seconds = int((fl_tm-now_time)-(((hours*60)+minutes)*60))
		seconds_str = str(seconds)
		do_timer = '–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ä—É–ª–µ—Ç–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å: '+hours_str+' —á–∞—Å–æ–≤ '+minutes_str+' –º–∏–Ω—É—Ç '+seconds_str+' —Å–µ–∫—É–Ω–¥.'
		bot.send_message(message.chat.id,do_timer)

#–∫–æ–º–∞–Ω–¥–∞ –ø–æ –ø–æ–∏—Å–∫—É –ø–∏–¥–æ—Ä–∞—Å–æ–≤ –∏ —Ç–ø—à–µ–∫
@bot.message_handler(commands=['ptstat'])
def handle_ptstat(message):

	bot.send_message(message.chat.id,'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ __–ø–∏–¥–æ—Ä–æ–≤__ —á–∞—Ç–∞:')
	stat_pid(vusersm)
	stat_string = stat_read(temp_file)
	bot.send_message(message.chat.id,stat_string)

	bot.send_message(message.chat.id,'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ __–¢–ü—à–µ–∫__ —á–∞—Ç–∞:')
	stat_pid(vusersw)
	stat_string = stat_read(temp_file)
	bot.send_message(message.chat.id,stat_string)

#–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ç–µ–º–ø —Ñ–∞–π–ª
def stat_pid(base_s):
	f = open(base_s,'r', encoding = "utf-8")
	names = list(f)
	f.close()
	o = open(temp_file,'w+', encoding = "utf-8")
	n=0

	for w in names:
		nnw = clean_enter (w)
		if len(w)>4:
			n+=1
			num = str(n)+'. '
			numw = num+nnw
			o.write(numw)
		elif nnw=='#':
			pass
		elif len(w)<=4:
			stw=' - '+nnw+' —Ä–∞–∑(–∞)'+'\n'
			o.write(stw)
		else:
			pass

	o.close()

def stat_read(file): #—á–∏—Ç–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ª—é–±–æ–≥–æ —Ñ–∞–π–ª–∞
	f = open(file, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	stat_string = f.read()
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	return stat_string

#–∑–∞–º–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å—Ç—Ä–æ–∫—É –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ
def rep_points(str_ing,rep_str,f): #str_ing - –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è rep_str - –Ω–æ–≤—ã–µ –±–∞–ª–ª—ã f - —Ñ–∞–π–ª-–±–∞–∑–∞
	words_file = open(f, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	names = list(words_file)
	words_file.close()
	n=0
	for w in names:
		if w==str_ing:
			break
		else:
			pass
		n+=1

	donames = names[0:(n+1)]
	rep_str = rep_str+'\n'
	poslenames = names[(n+2):len(names)]
	f = open(temp_file,'w+', encoding = "utf-8")
	for w in donames:
		f.write(w)
	f.write(rep_str)
	for w in poslenames:
		f.write(w)
	f.close()

#–Ω–∞—Ö–æ–¥–∏–º —Å–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def points_pidsS(str_ing,base_s):
	f = open(base_s,'r', encoding = "utf-8")
	names = list(f)
	f.close()
	n=0
	for w in names:
		if w==str_ing:
			break
		else:
			pass
		n+=1
	points = names[(n+1)]
	return points

#–∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –ø–∏–¥–∞—Ä–æ–≤
@bot.message_handler(commands=['deluser'])
def handle_deluser(message):
	sendd = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã(–±–µ–∑ @):')
	bot.register_next_step_handler(sendd, ddel_uspid) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

def ddel_uspid(message):
	name = message.text+'\n'
	del_pidsS(name,vusersm)
	rewrite_ftlist(vusersm)
	del_pidsS(name,vusersw)
	rewrite_ftlist(vusersw)
	bot.send_message(message.chat.id,'–ï—Å–ª–∏ –Ω–∏–∫ –≤–≤–µ–¥–µ–Ω –≤–µ—Ä–Ω–æ, —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω!')

#__________________________________–ê–õ–ö–ê–®___________________________
@bot.message_handler(commands=['alkash'])
def handle_alkash(message):
	f = open(alkash,'r', encoding = "utf-8")#vusersm
	name = f.read()
	f.close()
	name = '#'+str(name)
	ffraze = select_fr(alkashfr)+name#–ø–µ—Ä–≤–∞—è —Ñ—Ä–∞–∑–∞
	bot.send_message(message.chat.id,ffraze)

@bot.message_handler(commands=['addalk'])
def handle_alkash(message):
	sendd = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–ª–∫–∞—à–∞:')
	bot.register_next_step_handler(sendd, alko_fraze) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

def alko_fraze(message):
	f = open(alkash,'w+', encoding = "utf-8")#vusersm
	f.write(message.text)
	f.close()
	bot.send_message(message.chat.id,'–ò–º—è –∞–ª–∫–∞—à–∞ –∏–∑–º–µ–Ω–µ–Ω–æ^^')


#–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ
@bot.message_handler(commands=['restart'])
def handle_restart(message):
	cmd = 'bot_REstart .bat'
	PIPE = subprocess.PIPE
	p = subprocess.Popen(cmd, shell = True)
	p.wait()

#_____________________________________—É–±–∏–π—Ü–∞ —à–º—ã__________________________-
#—É–±–∏–π—Ü–∞
@bot.message_handler(commands=['shmaubeisya'])
def handle_shmakill(message):
	time_fo_ban = message.date+300;	#–í—Ä–µ–º—è –±–∞–Ω–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
	chatid = message.chat.id;
	userid = "200164142";
	bot.restrict_chat_member(chatid,userid,until_date=time_fo_ban,can_send_messages=False);
	fr_kill = "–®–º–∞, "+select_fr(shmappc)
	bot.send_message(message.chat.id,fr_kill)


#_________________________________—Ä—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞_________________________

#–ø–æ –∫–æ–º–∞–Ω–¥–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä—É–ª–µ—Ç–∫–∏
@bot.message_handler(commands=['regrulet'])
def handle_regrulet(message):
	rulname = message.from_user.first_name #–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
	iduser = message.from_user.id #id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
	Siduser = str(iduser); #id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
	#bot.send_message(message.chat.id,rulname)
	#bot.send_message(message.chat.id,iduser)
	f = open(rouletteus, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	fromlist = list(f) #—á–∏—Ç–∞–µ–º –≤—Å–µ –∏–º–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–º–µ—Ä—Ç–Ω–∏–∫–æ–≤
	for ur in fromlist:
		ur = clean_enter(ur) #–æ—á–∏—â–∞–µ–º –æ—Ç —ç–Ω—Ç–µ—Ä–æ–≤
		if ur==rulname:
			yes = 1
			break
		else:
			yes = 0
	f.close()
	if yes ==1:
		bot.send_message(message.chat.id,'üòà–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–ø–∏—Å–∫–µ —Å–º–µ—Ä—Ç–Ω–∏–∫–æ–≤ —Ä—É—Å—Å–∫–æ–π —Ä—É–ª–µ—Ç–∫–∏!üòà')
	else: #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ
		bot.send_message(message.chat.id,'üëª–î–æ–±–∞–≤–ª—è—é –í–∞—Å –≤ —Å–ø–∏—Å–æ–∫ –±–µ—Å—Å—Ç—Ä–∞—à–Ω—ã—Ö —Å—É–∏—Ü–∏–¥–Ω–∏–∫–æ–≤ —Ä—É—Å—Å–∫–æ–π —Ä—É–ª–µ—Ç–∫–∏!üëª')
		f = open(rouletteus, "a", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–∑–∞–ø–∏—Å–∏
		f.write(rulname + '\n')
		f.write('#'+Siduser + '\n')
		f.close()

#–ø–æ –∫–æ–º–∞–Ω–¥–µ —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä—É–ª–µ—Ç–∫–∏
@bot.message_handler(commands=['delrulet'])
def handle_delrulet(message):
	rulname = message.from_user.first_name #–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
	iduser = message.from_user.id #id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
	Siduser = str(iduser); #id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
	f = open(rouletteus, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	fromlist = list(f) #—á–∏—Ç–∞–µ–º –≤—Å–µ –∏–º–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–º–µ—Ä—Ç–Ω–∏–∫–æ–≤
	for ur in fromlist:
		ur = clean_enter(ur) #–æ—á–∏—â–∞–µ–º –æ—Ç —ç–Ω—Ç–µ—Ä–æ–≤
		if ur==rulname:
			yes = 1
			break
		else:
			yes = 0
	f.close()
	if yes ==1:
		bot.send_message(message.chat.id,'–í—ã –æ–±—Ä–∞–∑—É–º–∏–ª–∏—Å—å? –û—Ç–ª–∏—á–Ω–æ. –£–¥–∞–ª—è—é –í–∞—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç—Ä—É–ø–æ–≤.üëçüëçüëç')
		f = open(rouletteus, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
		f_string = f.read()
		f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

		f_string = (re.sub((rulname+'\n'+'#'+Siduser+'\n'), '', f_string)) #–µ—Å–ª–∏ —á—Ç–æ —Ç–æ —Ç—É—Ç —É–±—Ä–∞—Ç—å \n file_string = (re.sub(('\n'+str_ing), "\n", file_string))

		f = open(rouletteus, "w", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
		f_string = f.write(f_string)
		f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	else: #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ –Ω–∞–¥–æ –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è
		bot.send_message(message.chat.id,'ü§î–ê –í—ã –≤ –∑–¥—Ä–∞–≤–æ–º —É–º–µ, —Ä–∞–∑ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è —Ä—É—Å—Å–∫–æ–π —Ä—É–ª–µ—Ç–∫–∏, –Ω–æ –µ—Å–ª–∏ —è –æ—à–∏–±–∞—é—Å—å –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π /regrulet')

#–ø–æ –∫–æ–º–∞–Ω–¥–µ –Ω–∞—á–∏–Ω–∞–µ–º —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É
@bot.message_handler(commands=['rusrul'])
def handle_rusrul(message):
	time_fo_ban = message.date+30;	#–í—Ä–µ–º—è –±–∞–Ω–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
	chatid = message.chat.id; #id —á–∞—Ç–∞
	killer = message.from_user.first_name
	f = open(rouletteus, "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
	fromlist = list(f)
	num = 0
	for n in fromlist:
		if not '#' in n:
			num=num+1
		else:
			pass
	str_kand = '#'+killer+' –∑–∞—Ä—è–∂–∞–µ—Ç —Ä–µ–≤–æ–ª—å–≤–µ—Ä.'+'\nüòè –í —Å–ø–∏—Å–∫–µ —Å–º–µ—Ä—Ç–Ω–∏–∫–æ–≤ '+str(num)+' –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤... \n#'+killer+' –Ω–∞–≤–æ–¥–∏—Ç –ø–∏—Å—Ç–æ–ª–µ—Ç –Ω–∞...'

	numS = num*2
	i = randrange(0,numS)
	i = randrange(0,numS)
	i = randrange(0,numS)
	if '#' in fromlist[(i)]:
		jert = fromlist[(i-1)]
		jertid = clean_resh(fromlist[(i)])
	else:
		jert = fromlist[(i)]
		jertid = clean_resh(fromlist[(i+1)])
	jert = clean_enter(jert)

	patr = randrange(0,2)
	if patr == 1:
		jertid = int(jertid)
		bot.send_message(message.chat.id,str_kand+'#' + jert + '. \n–ú–µ–¥–ª–µ–Ω–Ω–æ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫—É—Ä–æ–∫... üò±\nüí•üí•üí•–ë–∞–±–∞—Ö!üí•üí•üí• #' + jert + ' —É–±–∏—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥!')
		bot.restrict_chat_member(chatid,jertid,until_date=time_fo_ban,can_send_messages=False);
	else:
		bot.send_message(message.chat.id,str_kand+'#' + jert + '. \n–ú–µ–¥–ª–µ–Ω–Ω–æ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫—É—Ä–æ–∫... üò±\nüòá–§—É—É—É—É—É—Ö! #' + jert + ', –ø–æ—Ö–æ–∂–µ —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å. –ü—Ä–æ–Ω–µ—Å–ª–æ. üòá #'+killer+' –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è!')
	f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

'''
#________________________________________WAKIE_________________________
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã wakie
@bot.message_handler(commands=['wakie'])
def handle_wakie(message):
	user = message.from_user.username
	wake_io = 0
	f = open('wakie.ii','r', encoding = "utf-8")#vusersm
	spisokp = list(f)
	f.close()
	name = '*'+user+"\n"
	for w in spisokp:
		if w==name:
			bot.send_message(message.chat.id,'–í—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –±—É–¥–∏–ª—å–Ω–∏–∫. –£–¥–∞–ª–∏—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π!')
			wake_io = 0
			break
		else:
			wake_io = 1
	if wake_io == 1:
		sendd = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—É(GMT+2), –∫–æ–≥–¥–∞ –≤–∞—Å —Ä–∞–∑–±—É–¥–∏—Ç—å:')
		bot.register_next_step_handler(sendd, wakie) #—Å–ª—É—à–∞–µ–º —Ñ—Ä–∞–∑—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
	else:
		pass

def wakie(message):

	#bot.send_message(message.chat.id,message.text) #–≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	wake_time = message.text
	if len(wake_time)==4:
		hour = wake_time[0]
		minutes = wake_time[2:4]
	elif len(wake_time)==5:
		hour = wake_time[0:2]
		if int(hour[0])==0:
			hour = wake_time[1]
		else:
			pass
		minutes = wake_time[3:5]
	else:
		bot.send_message(message.chat.id,'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–ø—Ä–æ–±—É–π —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ 18.15')

	if int(hour) >= 0:
		if int(hour)<25:
				if int(minutes) >= 0:
					if int(minutes)<61:
						wakie_allok(message,hour,minutes)
					else:
						bot.send_message(message.chat.id,"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–ø—Ä–æ–±—É–π —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ 18.15")
				else:
					bot.send_message(message.chat.id,"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–ø—Ä–æ–±—É–π —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ 18.15")
		else:
			bot.send_message(message.chat.id,"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–ø—Ä–æ–±—É–π —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ 18.15")
	else:
		bot.send_message(message.chat.id,"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–ø—Ä–æ–±—É–π —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ 18.15")


#–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∞ –≤ –±–∞–∑—É!!!!!!!!!!!!!!!!!
def wakie_allok(message,hour,minutes):
	#bot.send_message(message.chat.id,hour)
	#bot.send_message(message.chat.id,minutes)

	user = message.from_user.username #–ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	#bot.send_message(message.chat.id,user)# –≤—ã–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

	now_time = time.time()#—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫
	t_timet = time.ctime(now_time) #—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –≤–∏–¥–µ
	hmn_time = time.strptime(t_timet) #—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Å—Ç—Ä–æ–∫–µ
	str_hn = time.strftime("%H",hmn_time) #—Ç–µ–∫—É—â–∏–µ —á–∞—Å—ã –≤ —Å—Ç—Ä–æ–∫–µ
	str_mn = time.strftime("%M", hmn_time) #—Ç–µ–∫—É—â–∏–µ –º–∏–Ω—É—Ç –≤ —Å—Ç—Ä–æ–∫–µ
	str_hmn = '–°–µ–π—á–∞—Å: '+str_hn+' —á–∞—Å–æ–≤ '+str_mn+' –º–∏–Ω—É—Ç' #—Å—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
	#bot.send_message(message.chat.id,str_hmn)# –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º

	if int(hour)<int(str_hn):
		sleeph_wak = 24-int(str_hn)+int(hour)-1
		sleepm_wak = (60-int(str_mn))+int(minutes)
	elif int(hour)>int(str_hn):
		sleeph_wak = int(hour)-int(str_hn)-1
		sleepm_wak = (60-int(str_mn))+int(minutes)
	else:
		if int(minutes)>int(str_mn):
			sleeph_wak = 0
			sleepm_wak = int(minutes)-int(str_mn)
		else:
			sleeph_wak = 24-int(str_hn)+int(hour)-1
			sleepm_wak = int(str_mn)-int(minutes)

	sleep_sec = ((sleeph_wak*60)+sleepm_wak)*60#–≤—Ä–µ–º—è, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ —Ä–∞–∑–±—É–¥–∏—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö!!!!!!!!!!!!!!
	sleeph_wak_st = str(sleeph_wak)
	sleepm_wak_st = str(sleepm_wak)
	bud_time =  sleep_sec+now_time
	t_timet = time.ctime(bud_time)
	sleep_sec_st = '#'+str(t_timet)
	if sleep_sec > 300:
		f = open('wakie.ii','a', encoding = "utf-8")
		f.write('*'+user+'\n'+sleep_sec_st+'\n')
		f.close()
		bot.send_message(message.chat.id,'–•–æ—Ä–æ—à–æ, –Ω–µ –≤—ã–∫–ª—é—á–∞–π—Ç–µ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç. –Ø —Å–æ–æ–±—â—É –º–µ—Å—Ç–Ω—ã–º –±—É–¥–∏—Å—Ç–∞–º –æ —Ç–æ–º, —á—Ç–æ –í–∞—Å –Ω—É–∂–Ω–æ —Ä–∞–∑–±—É–¥–∏—Ç—å!')
		wakie_time_bud()#(message)
	else:
		bot.send_message(message.chat.id,'–ë—É–¥–∏–ª—å–Ω–∏–∫ –Ω–µ–ª—å–∑—è –∑–∞–≤–µ—Å—Ç–∏ –º–µ–Ω–µ–µ —á–µ–º –Ω–∞ 5 –º–∏–Ω—É—Ç.')

def wakie_time_bud():#(message):
	f = open('tempid.ii','r', encoding = "utf-8")#vusersm
	chatid = f.read()
	f.close()
	chatid = str(chatid)
	now_time = time.time()
	f = open('wakie.ii','r', encoding = "utf-8")#vusersm
	names = list(f)
	f.close()
	for w in names:
		w_resh=clean_resh (w)
		w_start = clean_tostart (w)
		if len(w) == len(w_start)+1:
			name_tw = clean_enter(w)
			name_tw = clean_tostart (name_tw)
			#bot.send_message(chatid,name_tw)#message.chat.id
		elif len(w)==len(w_resh)+1:
			slee_tw = clean_resh (w)
			#bot.send_message(chatid,slee_tw)#message.chat.id
			slee_tw = clean_enter(slee_tw)
			tttt = clean_qvadr (slee_tw)
			ttt=time.strptime(tttt)#–ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–∞—Ç
			fl_tm = time.mktime(ttt)#–ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤—Ä–µ–º—è –±—É–¥–∏–ª—å–Ω–∏–∫–∞ –≤ —Å–µ–∫—É–Ω–¥—ã
			if fl_tm > (now_time):#+3600
				sleep_twint = fl_tm - (now_time)#+3600
				sleep_tw = sleep_twint
				p = Process(target=budilnik, args=(chatid,name_tw,sleep_tw))#budilnik(message,name_tw,sleep_tw)
				p.start()
			else:
				bot.send_message(chatid,'–ü–æ—Ö–æ–∂–µ —Å–≤—è–∑—å –±—ã–ª–∞ —É—Ç–µ—Ä—è–Ω–∞ (–†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä, —Å—É–∫–∏, –æ–ø—è—Ç—å —Å–æ —Å–≤–æ–∏–º–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏!) –∏ —è –∫–æ–≥–æ-—Ç–æ –Ω–µ —Ä–∞–∑–±—É–¥–∏–ª! –°–æ—Ä—Ä—å–∫–∏(')
		else:
			pass

def budilnik(chatid,name_tw,sleep_tw):
	if int(sleep_tw) > 300:
		time.sleep(int(sleep_tw)-300) #—Ç–∞–π–º–µ—Ä
		str_budil = '–ù–∞–ø–æ–º–∏–Ω–∞—é. –¢—É—Ç –æ–¥–∏–Ω —Å–æ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ—á–∏–∫, –ø—Ä–æ—Å–∏–ª —Ä–∞–∑–±—É–¥–∏—Ç—å! –î–∞–π—Ç–µ @'+name_tw+' –ø–æ—Å–ø–∞—Ç—å 5 –º–∏–Ω—É—Ç–æ—á–µ–∫ –∏ –±—É–¥–∏—Ç–µ^^'
		bot.send_message(chatid,str_budil)
	else:
		pass
	time.sleep(int(sleep_tw))
	str_budil = '–≠–π, –±—É–¥–∏—Å—Ç—ã! –°—Ä–æ—á–Ω–æ –±—É–¥–∏—Ç–µ @'+name_tw+'. –≠—Ç–æ–º—É –°–æ–Ω–µ —É–∂–µ –¥–∞–≤–Ω–æ –ø–æ—Ä–∞ –≤—Å—Ç–∞–≤–∞—Ç—å=)'
	bot.send_message(chatid,str_budil)
	name = '*'+name_tw+'\n'
	del_pidsS(name,'wakie.ii')
	rewrite_ftlist('wakie.ii')
'''
#_____________________antispam bot_________________
def antispam(message):
	bot.send_message(message.chat.id,'Antispam-bot is work!')
#–£–¥–∞–ª—è–µ–º —Å–≤–æ–π –±—É–¥–∏–ª—å–Ω–∏–∫
@bot.message_handler(commands=['delwakie'])
def handle_delwakie(message):
	user = message.from_user.username
	wake_io = 0
	f = open('wakie.ii','r', encoding = "utf-8")#vusersm
	spisokp = list(f)
	f.close()
	name = '*'+user+"\n"
	for w in spisokp:
		if w==name:
			wake_io = 0
			break
		else:
			wake_io = 1
	if wake_io == 1:
		bot.send_message(message.chat.id,'–í–∞—à–µ–≥–æ –±—É–¥–∏–ª—å–Ω–∏–∫–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.')
	elif wake_io==0:
		bot.send_message(message.chat.id,'–£–¥–∞–ª—è—é –±—É–¥–∏–ª—å–Ω–∏–∫ –∏–∑ —Å–ø–∏–∫–∞...')
		name = '*'+user+'\n'
		del_pidsS(name,'wakie.ii')
		rewrite_ftlist('wakie.ii')

	else:
		pass

#–°–ø–∏—Å–æ–∫ —Å–ª–∏–ø–µ—Ä–æ–≤
@bot.message_handler(commands=['sleepers'])
def handle_sleepers(message):
	f = open('wakie.ii','r', encoding = "utf-8")#vusersm
	names = list(f)
	f.close()
	bot.send_message(message.chat.id,'–°–ø–∏—Å–æ–∫ –±—É–¥–∏–ª—å–Ω–∏–∫–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–∏—Ö –°–æ–Ω—å:')
	for w in names:
		if len(names)==1:#('empty'+'\n'):
			bot.send_message(message.chat.id,'–ù–µ–∫–æ–≥–æ –±—É–¥–∏—Ç—å! –í—Å–µ –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å!')
		else:
			if str(w)==('empty'+'\n'):
				pass
			else:
				w=str(w)
				w=clean_enter(w)
				w=clean_resh(w)
				w=clean_tostart(w)
				bot.send_message(message.chat.id,w)

#__________–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–æ–≤________________________
@bot.message_handler(commands=['returnme'])#–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—è
def handle_returnme(message):
	if rulles(message) == True:
		bot.restrict_chat_member(chat_idwork,user_admin,can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)
		bot.send_message(message.chat.id,'Xottabb14 is ok!',reply_to_message_id=message.message_id)
		bot.restrict_chat_member(chat_idwork,'1189995510',can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)
		bot.send_message(message.chat.id,'Shkerb14 is ok!',reply_to_message_id=message.message_id)
	else:
		bot.send_message(message.chat.id,'–ù–µ –ø–æ–ª–æ–∂–µ–Ω–æ!',reply_to_message_id=message.message_id)

@bot.message_handler(commands=['return1189995510'])#–≤–µ—Ä–Ω—É—Ç—å id 1189995510
def handle_returned(message):
	if rulles(message) == True:
		bot.restrict_chat_member(chat_idwork,'1189995510',can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)
		bot.send_message(message.chat.id,'Edik is ok!',reply_to_message_id=message.message_id)
	else:
		bot.send_message(message.chat.id,'–ù–µ –ø–æ–ª–æ–∂–µ–Ω–æ!',reply_to_message_id=message.message_id)

@bot.message_handler(commands=['returnboom'])#–≤–µ—Ä–Ω—É—Ç—å –±—É–º–∞ –∏–∑ –±–∞–Ω–∞
def handle_returnboom(message):
	if rulles(message) == True:
		bot.restrict_chat_member(chat_idwork,'593641534',can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)
		bot.send_message(message.chat.id,'Boom is ok!',reply_to_message_id=message.message_id)
	else:
		bot.send_message(message.chat.id,'–ù–µ –ø–æ–ª–æ–∂–µ–Ω–æ!',reply_to_message_id=message.message_id)

@bot.message_handler(commands=['returnbot'])#–≤–µ—Ä–Ω—É—Ç—å –±–æ—Ç–∞ –∏–∑ –±–∞–Ω–∞
def handle_returnbot(message):
	if rulles(message) == True:
		bot.restrict_chat_member(chat_idwork,'405960981',can_send_messages=True, can_send_media_messages=True, can_send_polls=True, can_send_other_messages=True, can_add_web_page_previews=True, can_change_info=True, can_invite_users=True, can_pin_messages=True)
		bot.send_message(message.chat.id,'All premissions ok!',reply_to_message_id=message.message_id)
		bot.chat_member(chat_idwork,'405960981',can_be_edited=True, can_change_info=True, can_post_messages=True, can_edit_messages=True, can_delete_messages=True, can_invite_users=True, can_restrict_members=True, can_pin_messages=True, can_promote_members=True, can_send_messages=True, can_send_media_messages=True, can_send_polls=True, can_send_other_messages=True, can_add_web_page_previews=True)
		bot.send_message(message.chat.id,'All Rulles ok!',reply_to_message_id=message.message_id)
		pass
	else:
		bot.send_message(message.chat.id,'–ù–µ –ø–æ–ª–æ–∂–µ–Ω–æ!',reply_to_message_id=message.message_id)
#__________–∫–æ–Ω–µ—Ü –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–æ–≤________________________



#__________reaction for stickers______
@bot.message_handler(content_types=['sticker'])
def handle_sticker(message):
	try:	
		list_badst = readlistfile('badcontent.ii')
		for bad in list_badst:
			if bad.replace('\n','') in str(message.sticker.file_unique_id):
				bot.delete_message(message.chat.id,message.message_id)
	except Exception as e:
		print("DelSteckerReactionError: ", e)
	try:
		if '-484910233'	in str(message.chat.id):
			#bot.send_message('-484910233',message.text)#chat_idwork
			bot.send_sticker(chat_idwork,message.sticker.file_id)
		if rulles(message) == True:
			#print (str(message))
			mymessageid = str(message.message_id)+'\n'
			file_my_messageid = str(message.from_user.id)+'/'+str(message.chat.id)
			o = open(file_my_messageid,'a', encoding = "utf-8")
			o.write(mymessageid)
			o.close()
		if config.test_chat	in str(message.chat.id):
			#bot.send_message('-484910233',message.text)#chat_idwork
			bot.send_message(config.test_chat,message.sticker.file_id,reply_to_message_id=message.message_id)

	except Exception as e:
		print("ExceptionSteckerReactionError: ", e)
	try:
		if 'üëç' in str(message.sticker.emoji):
			reiting_go(message,"+")
		elif 'üëé' in str(message.sticker.emoji):
			reiting_go(message,"-")
		else:
			pass
	except:
		pass

	if user_admin in str(message.chat.id):
		print(str(message.sticker.file_id))
		logging("ID_STICKER",str(message.sticker.file_id))

	stick_list = open('stickers.id', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	file_sticks = list(stick_list)
	stick_list.close()
	stk_rand = randrange(0,(len(file_sticks)-1))
	sticker_id = str(file_sticks[stk_rand])
	sticker_id_g = clean_enter(sticker_id)
	#print(sticker_id_g)
	try:
		if str(message.reply_to_message.from_user.username) == "iishka_bot":
			#(str(message.reply_to_message))
			bot.send_sticker(message.chat.id,sticker_id_g,reply_to_message_id=message.message_id)
		else:
			pass
	except Exception as e:
		print("ExceptionSteckerReactionError: ", e)
		#logging("ERROR_REACTION",e)
	#bot.send_sticker(message.chat.id, 'CAACAgQAAxkBAAInfF8j0Ms_wKVYa7UHM3yl_VmX4C5pAAI0AANfxgEZGbHlUy5kC0kaBA')

#–±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ left users
@bot.message_handler(content_types=["left_chat_member"])
def search_leftmemb(message):
	#bot.send_message(config.user_admin, str(message))
	rand_list_end = [' —Å–≤–∞–ª–∏–≤–∞–µ—Ç –∏–∑ —á–∞—Ç–∞. –î—Ä—è–Ω—å.üòà',' –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ-—Ç–∏—Ö–æ–º—É —Å–±–µ–∂–∞—Ç—å. –ú—ã —Å–∫—É—á–∞—Ç—å –Ω–µ –±—É–¥–µ–º...üòí',' —Ö–æ—á–µ—Ç —É–π—Ç–∏ –ø–æ-–∞–≥–ª–∏—Ü—Ü–∫–∏...üòù']
	rand_end_str = str(rand_list_end[randrange(0,len(rand_list_end)-1)])
	try:
		str_leftmem = "–ö—Ç–æ-—Ç–æ"+rand_end_str
		try:
			str_leftmem = '@'+str(message.left_chat_member.username)+rand_end_str
		except:
			try:
				str_leftmem = str(message.left_chat_member.first_name)+rand_end_str
			except:
				str_leftmem = str(message.left_chat_member.id)+rand_end_str
		bot.send_message(message.chat.id, str_leftmem)	
	except Exception as e:
		print("LEFT_USER_Error: ", e)
		logging("ERROR_LEFT_MEMB",e)

#–±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ new users
@bot.message_handler(content_types=["new_chat_members"])
def search_newmemb(message):
	#print ("Members here!!! \n")#(str(message.new_chat_members))
	#ban user messages!!!!!!!!!
	id_new_member = str(message.from_user.id)
	if '1220643323' in id_new_member:
		bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –ò–ª—å—é—Ö–∞. –û–ø—è—Ç—å —Ç—ã —Å–∫–∞—á–µ—à—å, –∫–∞–∫ –±–ª–æ—Ö–∞ –ø–æ *–æ–ø–µ –≥–∏–ø–ø–æ–ø–æ—Ç–∞–º–∞?')
	else:
		chatidtp = str(message.chat.id)
		bot.restrict_chat_member(message.chat.id, message.from_user.id,can_send_messages=False)
		#known_fw(str(time.time()),'tempbanid.ii')
		name_new_user = str(message.from_user.first_name)
		if 'None' in str(message.from_user.first_name):
			name_new_user = str(message.from_user.username)
		else:
			name_new_user = str(message.from_user.first_name)
		privetnews = select_fr(privetnew) #random fraze privet
		bothello = clean_namename (privetnews,name_new_user)#"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è "+name_new_user+". –£ —Ç–µ–±—è —Ä–æ–≤–Ω–æ 15 —Å–µ–∫—É–Ω–¥ —á—Ç–æ–±—ã –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∞ –∏–Ω–∞—á–µ –ø–æ—Å–ª–µ–¥—É–µ—Ç –±–∞–Ω!"
		user_id_new = str(message.from_user.id)
		known_fw(user_id_new,'newuserk.ii')
		known_fw(chatidtp,'chatidtmp.ii')
		keyboard_new = types.InlineKeyboardMarkup()
		text_of_hotbutton = select_fr(config.buttontuk)
		currencypair = types.InlineKeyboardButton(text=text_of_hotbutton, callback_data='nospammer39')
		keyboard_new.add(currencypair)
		bot.send_message(message.chat.id, bothello, reply_markup=keyboard_new) #ilya 1220643323

#________________________meeting______________________________________
@bot.message_handler(commands=['meeting'])
def handle_meeting(message):
	mess_data = str(message)
	meeter = str(message.from_user.id)
	known_fw(meeter,'meeter.ii')
	keyboard_meet = types.InlineKeyboardMarkup()
	one_day = types.InlineKeyboardButton(text='–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data='day_meeting1')
	two_day = types.InlineKeyboardButton(text='–í—Ç–æ—Ä–Ω–∏–∫', callback_data='day_meeting2')
	three_day = types.InlineKeyboardButton(text='–°—Ä–µ–¥–∞', callback_data='day_meeting3')
	four_day = types.InlineKeyboardButton(text='–ß–µ—Ç–≤–µ—Ä–≥', callback_data='day_meeting4')
	five_day = types.InlineKeyboardButton(text='–ü—è—Ç–Ω–∏—Ü–∞', callback_data='day_meeting5')
	six_day = types.InlineKeyboardButton(text='–°—É–±–±–æ—Ç–∞', callback_data='day_meeting6')
	seven_day = types.InlineKeyboardButton(text='–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', callback_data='day_meeting7')
	keyboard_meet.add(one_day,two_day,three_day,four_day,five_day,six_day,seven_day)
	bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏:', reply_markup=keyboard_meet)


def meet_func(call,dayseted):
	meeter = known_fw(dayseted,'daymeet.ii')
	keyboard_meet = types.InlineKeyboardMarkup()
	time0000 = types.InlineKeyboardButton(text='00:00', callback_data='00:00')
	time0030 = types.InlineKeyboardButton(text='00:30', callback_data='00:30')
	time0100 = types.InlineKeyboardButton(text='01:00', callback_data='01:00')
	time0130 = types.InlineKeyboardButton(text='01:30', callback_data='01:30')
	time0200 = types.InlineKeyboardButton(text='02:00', callback_data='02:00')
	time0230 = types.InlineKeyboardButton(text='02:30', callback_data='02:30')
	time0300 = types.InlineKeyboardButton(text='03:00', callback_data='03:00')
	time0330 = types.InlineKeyboardButton(text='03:30', callback_data='03:30')
	time0400 = types.InlineKeyboardButton(text='04:00', callback_data='04:00')
	time0430 = types.InlineKeyboardButton(text='04:30', callback_data='04:30')
	time0500 = types.InlineKeyboardButton(text='05:00', callback_data='05:00')
	time0530 = types.InlineKeyboardButton(text='05:30', callback_data='05:30')
	time0600 = types.InlineKeyboardButton(text='06:00', callback_data='06:00')
	time0630 = types.InlineKeyboardButton(text='06:30', callback_data='06:30')
	time0700 = types.InlineKeyboardButton(text='07:00', callback_data='07:00')
	time0730 = types.InlineKeyboardButton(text='07:30', callback_data='07:30')
	time0800 = types.InlineKeyboardButton(text='08:00', callback_data='08:00')
	time0830 = types.InlineKeyboardButton(text='08:30', callback_data='08:30')
	time0900 = types.InlineKeyboardButton(text='09:00', callback_data='09:00')
	time0930 = types.InlineKeyboardButton(text='09:30', callback_data='09:30')
	time1000 = types.InlineKeyboardButton(text='10:00', callback_data='10:00')
	time1030 = types.InlineKeyboardButton(text='10:30', callback_data='10:30')
	time1100 = types.InlineKeyboardButton(text='11:00', callback_data='11:00')
	time1130 = types.InlineKeyboardButton(text='11:30', callback_data='11:30')
	time1200 = types.InlineKeyboardButton(text='12:00', callback_data='12:00')
	time1230 = types.InlineKeyboardButton(text='12:30', callback_data='12:30')
	time1300 = types.InlineKeyboardButton(text='13:00', callback_data='13:00')
	time1330 = types.InlineKeyboardButton(text='13:30', callback_data='13:30')
	time1400 = types.InlineKeyboardButton(text='14:00', callback_data='14:00')
	time1430 = types.InlineKeyboardButton(text='14:30', callback_data='14:30')
	time1500 = types.InlineKeyboardButton(text='15:00', callback_data='15:00')
	time1530 = types.InlineKeyboardButton(text='15:30', callback_data='15:30')
	time1600 = types.InlineKeyboardButton(text='16:00', callback_data='16:00')
	time1630 = types.InlineKeyboardButton(text='16:30', callback_data='16:30')
	time1700 = types.InlineKeyboardButton(text='17:00', callback_data='17:00')
	time1730 = types.InlineKeyboardButton(text='17:30', callback_data='17:30')
	time1800 = types.InlineKeyboardButton(text='18:00', callback_data='18:00')
	time1830 = types.InlineKeyboardButton(text='18:30', callback_data='18:30')
	time1900 = types.InlineKeyboardButton(text='19:00', callback_data='19:00')
	time1930 = types.InlineKeyboardButton(text='19:30', callback_data='19:30')
	time2000 = types.InlineKeyboardButton(text='20:00', callback_data='20:00')
	time2030 = types.InlineKeyboardButton(text='20:30', callback_data='20:30')
	time2100 = types.InlineKeyboardButton(text='21:00', callback_data='21:00')
	time2130 = types.InlineKeyboardButton(text='21:30', callback_data='21:30')
	time2200 = types.InlineKeyboardButton(text='22:00', callback_data='22:00')
	time2230 = types.InlineKeyboardButton(text='22:30', callback_data='22:30')
	time2300 = types.InlineKeyboardButton(text='23:00', callback_data='23:00')
	time2330 = types.InlineKeyboardButton(text='23:30', callback_data='23:30')
	keyboard_meet.add(time0000,time0030,time0100,time0130,time0200,time0230,time0300,time0330,time0400,time0430,time0500,time0530,time0600,time0630,time0700,time0730,time0800,time0830,time0900,time0930,time1000,time1030,time1100,time1130,time1200,time1230,time1300,time1330,time1400,time1430,time1500,time1530,time1600,time1630,time1700,time1730,time1800,time1830,time1900,time1930,time2000,time2030,time2100,time2130,time2200,time2230,time2300,time2330)
	#bot.send_message(message.chat.id,'–í—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏:', reply_markup=keyboard_meet)
	bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏:', reply_markup=keyboard_meet)
@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
	id_now_user = known_fr('newuserk.ii')
	chatidtp = known_fr('chatidtmp.ii')
	meeter = known_fr('meeter.ii')
	id_clicker = call.from_user.id
	id_now_user = clean_enter (str(id_now_user))
	id_clicker = clean_enter (str(id_clicker))
	chatidtp = clean_enter (str(chatidtp))
	if call.data == "igomeet":
		if "None" in str(call.from_user.username):
			usermeetname = str(call.from_user.first_name)
			usermeetnamez = '@'+usermeetname
		else:
			usermeetname = str(call.from_user.username)
			usermeetnamez = '@'+usermeetname
		MSGfortextMeet = known_fr('MSGfortextMeet.ii')
		if usermeetname in MSGfortextMeet:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ù—É –∏ —Ñ–∏–≥ —Å —Ç–æ–±–æ–π.")
			str_del_meet = ', '+usermeetnamez
			MSGfortextMeetNew = MSGfortextMeet.replace(str_del_meet,'')
			known_fw(MSGfortextMeetNew,'MSGfortextMeet.ii')
			keyboard_igo = types.InlineKeyboardMarkup()
			igo_butt = types.InlineKeyboardButton(text='–Ø –±—É–¥—É/–ù–µ –±—É–¥—Éüëª', callback_data='igomeet')
			keyboard_igo.add(igo_butt)
			bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text=MSGfortextMeetNew,reply_markup=keyboard_igo)
		else:
			MSGfortextMeetNew = MSGfortextMeet+", @"+usermeetname
			known_fw(MSGfortextMeetNew,'MSGfortextMeet.ii')
			keyboard_igo = types.InlineKeyboardMarkup()
			igo_butt = types.InlineKeyboardButton(text='–Ø –±—É–¥—É/–ù–µ –±—É–¥—Éüëª', callback_data='igomeet')
			keyboard_igo.add(igo_butt)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=MSGfortextMeetNew,reply_markup=keyboard_igo)

	if int(id_now_user) == int(id_clicker):
		if call.data == "nospammer39":
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ—Ö–æ–¥–∏, —Ä–∞—Å–ø–æ–ª–∞–≥–∞–π—Å—è!üòé –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ /ruleskld")
			bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ—Ö–æ–¥–∏, —Ä–∞—Å–ø–æ–ª–∞–≥–∞–π—Å—è!üòéüòéüòé")
			bot.restrict_chat_member(chatidtp,id_now_user,can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)

	else:
		if int(meeter) == int(call.from_user.id):
			if call.data == 'day_meeting1':
				meet_func(call,'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
			elif call.data == 'day_meeting2':
				meet_func(call,'–í—Ç–æ—Ä–Ω–∏–∫')
			elif call.data == 'day_meeting3':
				meet_func(call,'–°—Ä–µ–¥–∞')
			elif call.data == 'day_meeting4':
				meet_func(call,'–ß–µ—Ç–≤–µ—Ä–≥')
			elif call.data == 'day_meeting5':
				meet_func(call,'–ü—è—Ç–Ω–∏—Ü–∞')
			elif call.data == 'day_meeting6':
				meet_func(call,'–°—É–±–±–æ—Ç–∞')
			elif call.data == 'day_meeting7':
				meet_func(call,'–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
			else:
				tmeet_io = "None"
				for i in config.time_meet_choose:
					if call.data in i:
						#bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text=i)
						tmeet_io = i
						break
					else:
						pass
				if tmeet_io == "None":
					bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–î–∞–Ω–Ω—ã–µ –º–æ–∂–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞–∑–Ω–∞—á–∏–≤—à–∏–π –≤—Å—Ç—Ä–µ—á—É.")
				else:
					date_meet_now = known_fr('daymeet.ii')
					tmeet_ioo = date_meet_now+' –≤ '+tmeet_io+' —á.'
					known_fw(tmeet_ioo,'daymeet.ii')
					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤—Å—Ç—Ä–µ—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä –∞–¥—Ä–µ—Å –∏ –ø—Ä–∏—á–∏–Ω—É) –∏–ª–∏ —Å–ª–æ–≤–æ "–æ—Ç–º–µ–Ω–∞", –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏. –ê–∫–∫—É—Ä–∞—Ç–Ω–µ–π! –°–ª–µ–¥—É—é—â–µ–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.')
					meeteng_io_meet = "ON"
					#print(meeteng_io_meet)
					known_fw(meeteng_io_meet,'meetIO.ii')
					#bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text=tmeet_ioo)
		else:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="üëª")

#___________meeting____END_______________________________

#_____________–≤–∞–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏_________________
#–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–π —Ñ—Ä–∞–∑—ã –∏–∑ —Ñ–∞–π–ª–∞
def sendregmes(message,fromfilelistfr):
	fraze_fromlist = select_fr(fromfilelistfr)
	bot.send_message(message.chat.id,fraze_fromlist,reply_to_message_id=message.message_id)

#–∫–∏–∫–Ω—É—Ç—å —Å–ø–∞–º–µ—Ä–∞
def kickspamer(message):
		bot.delete_message(message.chat.id,message.message_id)
		bot.kick_chat_member(message.chat.id, message.from_user.id)
		spam_fr_frazesreg = select_fr(regularfrazes.smapsvolochi)
		spam_kick_fraze = '@'+str(message.from_user.first_name)+spam_fr_frazesreg
		bot.send_message(message.chat.id,spam_kick_fraze)

#—É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
def delmessage(message):
		bot.delete_message(message.chat.id,message.reply_to_message.message_id)

#–∑–∞–Ω–µ—Å–µ–Ω–∏–µ –≥–∞–≤–Ω–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –±–∞–Ω–ª–∏—Å—Ç
def badcontent(message):
	if rulles(message) == True:
		try:
			test_data = ["\'content_type\': \'photo\'","\'content_type\': \'sticker\'","\'content_type\': \'document\'","\'content_type\': \'video\'"]
			for td in test_data:
				if td in str(message):
					f_data = ''
					if 'photo' in td:
						f_data = str(message.reply_to_message.json['photo'][0]['file_unique_id'])+"\n"#.photo[0].file_id)
					elif 'video' in td:
						f_data = str(message.reply_to_message.json['video']['file_unique_id'])+"\n"
					elif 'sticker' in td:
						f_data = str(message.reply_to_message.json['sticker']['file_unique_id'])+"\n"#[0]['file_id'])+"\n"#.sticker.file_id)
					elif 'document' in td:
						f_data = str(message.reply_to_message.json['document']['file_unique_id'])+"\n"#[0]['file_id'])+"\n"
					else:
						pass
					#bot.send_message(message.chat.id,f_data)
					writetofile('badcontent.ii',f_data)
			delmessage(message)
		except Exception as e:
			print (e)
			bot.send_message(message.chat.id,'–°–æ–≥–ª–∞—Å–µ–Ωü§¶‚Äç‚ôÇÔ∏è')
	if modrulles(message) == True:
		try:
			test_data = ["\'content_type\': \'photo\'","\'content_type\': \'sticker\'","\'content_type\': \'document\'","\'content_type\': \'video\'"]
			for td in test_data:
				if td in str(message):
					f_data = ''
					if 'photo' in td:
						f_data = str(message.reply_to_message.json['photo'][0]['file_unique_id'])+"\n"#.photo[0].file_id)
					elif 'video' in td:
						f_data = str(message.reply_to_message.json['video']['file_unique_id'])+"\n"
					elif 'sticker' in td:
						f_data = str(message.reply_to_message.json['sticker']['file_unique_id'])+"\n"#[0]['file_id'])+"\n"#.sticker.file_id)
					elif 'document' in td:
						f_data = str(message.reply_to_message.json['document']['file_unique_id'])+"\n"#[0]['file_id'])+"\n"
					else:
						pass
					#bot.send_message(message.chat.id,f_data)
					writetofile('badcontent.ii',f_data)
			delmessage(message)
		except Exception as e:
			print (e)
			bot.send_message(message.chat.id,'–°–æ–≥–ª–∞—Å–µ–Ωü§¶‚Äç‚ôÇÔ∏è')

#–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def xottabbmagic(message,kickmesmag,choosekik):
	if rulles(message) == True:
		try:
			idkicked = message.reply_to_message.from_user.id#.json#.from.id)
			print(str(idkicked))
			bot.send_message(message.chat.id,kickmesmag)
			bot.kick_chat_member(message.chat.id, idkicked)
			bot.delete_message(message.chat.id,message.reply_to_message.message_id)
		except:
			bot.send_message(message.chat.id,choosekik)
	else:
		pass

#__–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–π__
@bot.message_handler(content_types= ['audio'])
def resend_audio(message):
	try:
		if '-484910233' in str(message.chat.id):
			#bot.send_message(chat_idwork,message.sticker.file_id)
			bot.send_message(chat_idwork,'Music time!üíÉüèªüï∫')
			bot.send_audio(chat_idwork,str(message.audio.file_id))
		if test_chat in str(message.chat.id):
			#bot.send_message(chat_idwork,message.sticker.file_id)
			bot.send_message(test_chat,'FileID:')
			bot.send_message(test_chat,str(message.audio.file_id))
	except:
		pass

#________time_ban________________
def timeban(message,time_for_kick,min_time):
	try:
		if rulles(message) == True:
			time_fo_ban_bad = message.date+time_for_kick
			bot.restrict_chat_member(message.chat.id,message.reply_to_message.from_user.id,until_date=time_fo_ban_bad,can_send_messages=False)
			text_to_timeban = '–¢–∞–∫. –í —É–≥–æ–ª –Ω–∞ '+min_time+' –º–∏–Ω—É—Ç. –ü–æ–¥—É–º–∞–µ—à—å, –ø–æ–ø–ª–∞—á–µ—à—å, –≤–µ—Ä–Ω–µ—à—å—Å—è!'
			bot.send_message(message.chat.id,text_to_timeban,reply_to_message_id=message.message_id)
		elif '1189995510' in str(message.from_user.id):
			time_fo_ban_bad = message.date+time_for_kick
			bot.restrict_chat_member(message.chat.id,message.reply_to_message.from_user.id,until_date=time_fo_ban_bad,can_send_messages=False)
			text_to_timeban = '–°—Ö–æ–¥–∏, –ø—Ä–æ–≤–µ—Ç—Ä–∏—Å—å '+min_time+' –º–∏–Ω—É—Ç.'
			bot.send_message(message.chat.id,text_to_timeban,reply_to_message_id=message.message_id)
		else:
			if "None" in str(message.reply_to_message.from_user.username):
				name_baduser = str(message.reply_to_message.from_user.firs_name)
			else:
				name_baduser = str(message.reply_to_message.from_user.username)
			str_tixo = "Bad USVER!______ "+name_baduser+": "+str(message.reply_to_message.text)
			bot.send_message(user_admin,str_tixo)
			bot.send_message(message.chat.id,'–°–æ–æ–±—â–∏–ª –∫—É–¥–∞-–Ω–∞–¥–æ. –£–∂–µ –≤—ã–µ—Ö–∞–ª–∏!',reply_to_message_id=message.message_id)
	except Exception as e:
		print("ExceptionALL: ", e)
		logging("ERROR_ALL",e)

#_____—Ñ–∞—Å____
def fas(message):
	omon_liststr1 = ['–í—Å–µ–º –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–µ!üëÄ','–ù–∏–∫–æ–º—É –Ω–µ –¥–∏–≥–∞—Ç—å—Å—è!','–í—Å–µ –∑–∞–º–µ—Ä–ª–∏!üëÄ','–í—Å–µ–º –ª–µ–∂–∞—Ç—å!üòº','–ù–µ –¥–≤–∏–≥–∞—Ç—å—Å—è!üòº','–ó–∞–º–µ—Ä–ª–∏!!!üëÆ‚Äç‚ôÄÔ∏è']
	bot.send_message(message.chat.id,str(omon_liststr1[randrange(0,len(omon_liststr1)-1)]))
	omon_liststr2 = ['–†–∞–±–æ—Ç–∞–µ—Ç —Å–ø–µ—Ü–≥—Ä—É–ø–ø–∞!','–ú–æ—Ä–¥–æ–π –≤ –ø–æ–ª!üëÆ‚Äç‚ôÄÔ∏è','–õ–µ–∂–∞—Ç—å, —Å—Ü—É–∫–∞!ü§¨','–ö —Å—Ç–µ–Ω–µ!üëä','–ú–µ–¥–ª–µ–Ω–Ω–æ –ø–Ω–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—é–¥–∞...','–ë–µ–∑ —Ä–µ–∑–∫–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π, —Å–≤–æ–ª–æ—á—å!']
	xottabbmagic(message,str(omon_liststr2[randrange(0,len(omon_liststr2)-1)]),'–ë–∞–∑–∞! –û—Ç–±–æ–π! –õ–æ–∂–Ω—ã–π –≤—ã–∑–æ–≤!üëÄ')
	#bot.send_message(message.chat.id,str(omon_liststr2[randrange(0,len(omon_liststr2)-1)]))
	omon_listgif = ['http://img0.reactor.cc/pics/post/–≥–∏—Ñ–∫–∏-–æ–º–æ–Ω-–ø–µ—Å–æ—á–Ω–∏—Ü–∞-1002132.gif','https://otvet.imgsmail.ru/download/u_ea9187585412823d52546fa9814b393d_800.gif','http://img0.joyreactor.cc/pics/post/–≥–∏—Ñ–∫–∞-–æ–º–æ–Ω-–∑–∞–¥–µ—Ä–∂–∞–Ω–∏–µ-—à–Ω—É—Ä–æ–∫-—Ä–∞–∑–≤—è–∑–∞–ª—Å—è-3675908.gif','https://static.life.ru/publications/2020/4/22/241200384572.67203.gif','https://zasmeshi.ru/data/gif/6645-korotko-o-tom-kakaya-u-menya-komanda-v-lyuboj-onlajn-igre.gif']
	nowgif = select_fr(omon_listgif)
	bot.send_animation(message.chat.id,nowgif)
	omon_liststr3 = ['üí™–ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!','–ú–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è. –ú—É–¥–∞–∫ –∑–∞–¥–µ—Ä–∂–∞–Ω!üëå','–í—ã–¥—ã—Ö–∞–µ–º! –°–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ—Ç —Å–∫–æ—Ä–∞—è —Å –∫–∞—Ä–≤–∞–ª–æ–ª–æ–º.üöë','ü§ü–í—Å–µ–º –≤–æ–ª—å–Ω–æ! –£—Ö–æ–¥–∏–º...']
	bot.send_message(message.chat.id,str(omon_liststr3[randrange(0,len(omon_liststr3)-1)]))

#______________–∫–æ–Ω–µ—Ü –≤–∞–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π______________


#__–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ__
@bot.message_handler(content_types= ['photo','video'])
def resend_photo(message):
	#print(str(message.message_id))
	try:	
		list_badst = readlistfile('badcontent.ii')
		for bad in list_badst:
			if bad.replace('\n','') in str(message.json['photo'][0]['file_unique_id']):
				bot.delete_message(message.chat.id,message.message_id)
	except Exception as e:
		print("DelPhotoError: ", e)
	try:	
		list_badst = readlistfile('badcontent.ii')
		for bad in list_badst:
			if bad.replace('\n','') in str(message.json['video']['file_unique_id']):
				bot.delete_message(message.chat.id,message.message_id)
	except Exception as e:
		print("DelVideoError: ", e)
	try:
		if rulles(message) == True:
			mymessageid = str(message.message_id)+'\n'
			file_my_messageid = str(message.from_user.id)+'/'+str(message.chat.id)
			o = open(file_my_messageid,'a', encoding = "utf-8")
			o.write(mymessageid)
			o.close()
	except Exception as e:
		print("ResendFVError: ", e)
		logging("ERROR_MEDIA",e)
	bot.forward_message('-442562860', message.chat.id,message.message_id)

#__–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç__
@bot.message_handler(content_types= ['document'])
def re_gif(message):
	try:	
		list_badst = readlistfile('badcontent.ii')
		for bad in list_badst:
			if bad.replace('\n','') in str(message.json['document']['file_unique_id']):
				bot.delete_message(message.chat.id,message.message_id)
	except Exception as e:
		print("DelDOCReactionError: ", e)
	try:
		if rulles(message) == True:
			if user_admin in str(message.chat.id):
				bot.send_message(user_admin,str(message))
		if '1189995510' in str(message.from_user.id):
			pass#bot.send_message('1189995510',str(message))
	except Exception as e:
		print("ResendFVError: ", e)
		logging("ERROR_MEDIA",e)
	bot.forward_message('-442562860', message.chat.id,message.message_id)
	if 'aajioaacoh5kb33n7esaae8hbhse' in str(message.document.file_id).lower():
		iron_hat = select_fr(regularfrazes.iron_hat)
		bot.send_message(message.chat.id,iron_hat)

#_____________________–†–µ–π—Ç–∏–Ω–≥__________________
#______reiting up
def lvlup(message,lvllist,lvl_user):
	rownum = 0
	for i in lvllist:
		if lvl_user in i:
			rownum = rownum+1
			new_lvl_set = str(int(lvllist[rownum])+1)
			lvllist[rownum] = new_lvl_set
			f = open( 'reiting.ii', 'w', encoding = "utf-8")
			for item in lvllist:
				item_en = clean_enter(item)
				f.write("%s\n" % item_en)
			f.close()
			if lvl_user != 'Xottabb14':
				if lvl_user != 'RussianSpirit39':
					str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –ø–æ–≤—ã—Å–∏–ª—Å—è ('+new_lvl_set+')!'
				else:
					str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ –ø–ª–∏–Ω—Ç—É—Å–∞ ('+'#–û–¥–Ω–∏–º—Å–ª–æ–≤–æ–º–ì–Ω–æ–º'+')!'
			else:
				str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –≤—Å–µ–≥–¥–∞ –≤—ã—Å–æ–∫–∏–π ('+'#–ü—Ä–æ—Å—Ç–æ–∫—Ä–∞—Å–∞–≤—á–∏–∫'+')!'
			bot.send_message(message.chat.id,str_new_lvl)
			break
		else:
			rownum = rownum+1

#______reiting down
def lvldown(message,lvllist,lvl_user):
	rownum = 0
	for i in lvllist:
		if lvl_user in i:
			rownum = rownum+1
			new_lvl_set = str(int(lvllist[rownum])-1)
			lvllist[rownum] = new_lvl_set
			f = open( 'reiting.ii', 'w', encoding = "utf-8")
			for item in lvllist:
				item_en = clean_enter(item)
				f.write("%s\n" % item_en)
			f.close()
			if lvl_user != 'Xottabb14':
				if lvl_user != 'RussianSpirit39':
					str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –ø–æ–Ω–∏–∑–∏–ª—Å—è ('+new_lvl_set+')!'
				else:
					str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ –ø–ª–∏–Ω—Ç—É—Å–∞ ('+'#–û–¥–Ω–∏–º—Å–ª–æ–≤–æ–º–ì–Ω–æ–º'+')!'
			else:
				str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –≤—Å–µ–≥–¥–∞ –≤—ã—Å–æ–∫–∏–π ('+'#–ü—Ä–æ—Å—Ç–æ–∫—Ä–∞—Å–∞–≤—á–∏–∫'+')!'
			bot.send_message(message.chat.id,str_new_lvl)
			break
		else:
			rownum = rownum+1

#______reiting search______
def lvlsearch(message,znak):
	lvlfile = open('reiting.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	lvllist = list(lvlfile)
	lvlfile.close()

	name_in = 0
	for i in lvllist:
		#print (i)
		lvl_user = ''
		if 'None' in str(message.reply_to_message.from_user.username):
			lvl_user = str(message.reply_to_message.from_user.first_name)
		else:
			lvl_user = str(message.reply_to_message.from_user.username)
		if lvl_user in i:
			if znak == '+':
				lvlup(message,lvllist,lvl_user)
			else:
				lvldown(message,lvllist,lvl_user)
			#__reaction fo name yes
			name_in = 1
			break
		else:
			name_in = 0
	if name_in == 0:
		if znak == '+':
			namelvl = lvl_user+'\n1\n'
			str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –ø–æ–≤—ã—Å–∏–ª—Å—è (1)!'
		else:
			namelvl = lvl_user+'\n-1\n'
			str_new_lvl = '–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @'+lvl_user+' –ø–æ–Ω–∏–∑–∏–ª—Å—è (-1)!'
		f = open('reiting.ii', "a", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
		f.write(namelvl)
		f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
		bot.send_message(message.chat.id,str_new_lvl)
	else:
		pass

def reiting_go(message,plusminus):
	if str(message.reply_to_message.from_user.username) != str(message.from_user.username):
		try:
			lvlsearch(message,plusminus)
		except Exception as e:
			print("RatingError: ", e)
			logging("ERROR_RATING",e)
	else:
		bot.send_message(message.chat.id,'–ù–∞ —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –≤–ª–∏—è—Ç—å –Ω–µ–ª—å–∑—è! –•–∏—Ç—Ä–æ–ø–æ–ø–æ—Å—Ç—å –∑–¥–µ—Å—å –Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—èüòà')

#_________________–∫–æ–Ω–µ—Ü —Ä–µ–π—Ç–∏–Ω–≥–∞___________________

#______________________—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è__________
@bot.message_handler(regexp="((–•|—Ö)—É—é—Ç—Ä–æ?\D*?)|((–•|—Ö)—É—é—Ç—Ä–∏—á–∫–æ?\D*?)")
def search_regxp(message):
	sendregmes(message,xuutro)
	bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIvbF86W9SJhxxuTS02ytsRWvlHiPBfAAIiAANfxgEZ8_q_s-6jQF4aBA')
@bot.message_handler(regexp="(R|r)adio\s\D*?(T|t)ap")
def search_radiotapok(message):
	sendregmes(message,config.radioaimori)
	bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvbV86XB5dd7mY0pwcbrTDgvRK_CvoAAKMCAACCTs7E2Q79JtelJtvGgQ')
@bot.message_handler(regexp="(–†|—Ä)–∞–¥–∏–æ\s\D*?(–¢|—Ç)–∞–ø")
def search_radiotapokrus(message):
	sendregmes(message,config.radioaimori)
	bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIvbl86XGps7ebIR2pWaPzJxeKTCY6xAAIBAQACS2nuEJv1aj-U7cz6GgQ')
@bot.message_handler(regexp="((–≠|—ç)–ª—å—Ñ—ã\D*?\s\D*?–∏\D*?\s\D*?(–ì|–≥)–Ω–æ–º—ã\D*?)|((–ì|–≥)–Ω–æ–º—ã\D*?\s\D*?–∏\D*?\s\D*?(–≠|—ç)–ª—å—Ñ—ã\D*?)")
def search_elfgnom(message):
	bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvb186XRW8oUgaHfYlMweeq3NHxwb1AAK0AwACxKtoC4EsZDYuxEEyGgQ')
	sendregmes(message,regularfrazes.elfgnoms)
@bot.message_handler(regexp="(((T|—Ç)—è–Ω)|((–î|–¥)–µ–≤—É—à–∫–∞*))\s–≤\s(–õ|–ª)(–°|—Å)")
def search_tyanvls(message):
	sendregmes(message,regularfrazes.tyan_ls)
@bot.message_handler(regexp="(–í|–≤)–æ—Å—Å—Ç–∞–Ω–∏(–µ|—è|—é|–µ–º|—è—Ö|–π)\s(–ú|–º)–∞—à–∏–Ω(–∞|—É|—ã|–∞–º|–æ–π)?")
def search_robokill(message):
	bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvcF86XUugnRJqu_QIPnjgQvBTPHWcAAIaAgADOKAK1Dm-NI6wbVIaBA')
	sendregmes(message,regularfrazes.robokill)

@bot.message_handler(regexp="((–°|—Å)–ø–∞—Å–∏–±–æ\D*?|(–ü|–ø)–∞—Å–∏–±\D*?|(–ë|–±)–ª–∞–≥–æ–¥–∞—Ä—é\D*?)|(T|t)hank\D*?")
def search_spasibki(message):
	try:
		reiting_go(message,"+")
	except Exception as e:
		print("ThanksError: ", e)
		logging("ERROR_THANKS",e)
@bot.message_handler(regexp="((–ö|–∫)—É–¥–∞\D*?\s((–°|—Å)—Ö–æ–¥–∏—Ç—å\D*?|(–°|—Å)–µ–∑–¥–∏—Ç—å\D*?))|((–ö|–∫)—É–¥–∞*\s–≤\s(–ö|–∫)–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ\D*?\s((–°|—Å)—Ö–æ–¥–∏—Ç—å\D*?|(–°|—Å)–µ–∑–¥–∏—Ç—å\D*?))|((–ß|—á)—Ç–æ\D*?\s(–ü|–ø)–æ—Å–º–æ—Ç—Ä–µ—Ç—å\D*?\s–≤\s(–ö|–∫)–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ\D*?)|((–ß|—á)—Ç–æ\D*?\s–≤\s(–ö|–∫)–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ\D*?\s(–ü|–ø)–æ—Å–º–æ—Ç—Ä–µ—Ç—å\D*?)")
def search_kudago(message):
	try:
		f = open('kudago.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
		kudago_string = f.read()+"\n"+config.str_covidparty
		f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIveV86YIkq9BrdGMYBkrEd37n10tQUAAKzAwACRvusBEGIhWrpbAKRGgQ')
		bot.send_message(message.chat.id,kudago_string,parse_mode="Markdown")
	except Exception as e:
		print("ExceptionKUDAGO: ", e)
		logging("ERROR_KUDAGO",e)

@bot.message_handler(regexp="((–î|–¥)–æ–±—Ä\D*?|(–•|—Ö)–æ—Ä–æ—à\D*?|(–ü|–ø)—Ä–µ–∫—Ä–∞—Å\D*?|(–ß|—á)—É–¥–µ—Å\D*?|(–ö|–∫)–ª–∞—Å—Å\D*?)\s((–£|—É)—Ç—Ä\D*?|(–í|–≤)–µ—á–µ—Ä\D*?|(–ù|–Ω)–æ—á\D*?|(–í|–í)—Ä–µ–º\D*?|(–î|–¥)–µ?–Ω\D)(\s((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?))|((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?|(\D*?,))\s((–î|–¥)–æ–±—Ä\D*?|(–•|—Ö)–æ—Ä–æ—à\D*?|(–ü|–ø)—Ä–µ–∫—Ä–∞—Å\D*?|(–ß|—á)—É–¥–µ—Å\D*?|(–ö|–∫)–ª–∞—Å—Å\D*?)\s((–£|—É)—Ç—Ä\D*?|(–í|–≤)–µ—á–µ—Ä\D*?|(–ù|–Ω)–æ—á\D*?|(–í|–í)—Ä–µ–º\D*?|(–î|–¥)–µ?–Ω\D)|((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?)\s((–£|—É)—Ç—Ä\D*?|(–í|–≤)–µ—á–µ—Ä\D*?|(–ù|–Ω)–æ—á\D*?|(–í|–í)—Ä–µ–º\D*?|(–î|–¥)–µ?–Ω\D)\s((–î|–¥)–æ–±—Ä\D*?|(–•|—Ö)–æ—Ä–æ—à\D*?|(–ü|–ø)—Ä–µ–∫—Ä–∞—Å\D*?|(–ß|—á)—É–¥–µ—Å\D*?|(–ö|–∫)–ª–∞—Å—Å\D*?)|(((–£|—É)—Ç—Ä\D*?|(–í|–≤)–µ—á–µ—Ä\D*?|(–ù|–Ω)–æ—á\D*?)|(–í|–í)—Ä–µ–º\D*?|(–î|–¥)–µ?–Ω\D)\s((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?|(\D*?,))\s((–î|–¥)–æ–±—Ä\D*?|(–•|—Ö)–æ—Ä–æ—à\D*?|(–ü|–ø)—Ä–µ–∫—Ä–∞—Å\D*?|(–ß|—á)—É–¥–µ—Å\D*?|(–ö|–∫)–ª–∞—Å—Å\D*?)|(((–£|—É)—Ç—Ä\D*?|(–í|–≤)–µ—á–µ—Ä\D*?|(–ù|–Ω)–æ—á\D*?)|(–í|–í)—Ä–µ–º\D*?|(–î|–¥)–µ?–Ω\D)\s((–î|–¥)–æ–±—Ä\D*?|(–•|—Ö)–æ—Ä–æ—à\D*?|(–ü|–ø)—Ä–µ–∫—Ä–∞—Å\D*?|(–ß|—á)—É–¥–µ—Å\D*?|(–ö|–∫)–ª–∞—Å—Å\D*?)((\s((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?)))|(((–ü|–ø)—Ä–∏–≤–µ—Ç\D?|(–ó|–∑)–¥(–æ|–∞)—Ä–æ–≤\D|(–¢|—Ç)—Ä—è–º|(–•|—Ö)–∞–π|(–ó|–∑)–¥—Ä–∞–≤—Å\D*?|(–£|—É)—Ç—Ä\D*?))((\s((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?))|,\s\D*?)|((–í|–≤)—Å–µ\D*?|(–ß|—á)–∞—Ç\D*?|(–õ|–ª)—é–¥\D*?|(–î|–¥)–∂–µ–Ω—Ç\D*?|(–õ|–ª)–µ–¥\D*?|(–ì|–≥)–æ—Å–ø–æ–¥\D*?|(–î|–¥)–∞–º\D*?|(\D*?,))\s((–ü|–ø)—Ä–∏–≤–µ—Ç\D?|(–ó|–∑)–¥(–æ|–∞)—Ä–æ–≤\D?|(–¢|—Ç)—Ä—è–º|(–•|—Ö)–∞–π|(–ó|–∑)–¥—Ä–∞—Å\D*?|(–£|—É)—Ç—Ä\D|(–í|–≤)–µ—á–µ—Ä\D?|(–ù|–Ω)–æ—á\D|(–í|–í)—Ä–µ–º\D|(–î|–¥)–µ?–Ω\D)|((–í|–≤)–µ—á–µ—Ä\s–≤\s—Ö–∞—Ç\D)")
def search_helloall(message):
	stick_list = open('stickersHI.id', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	file_sticks = list(stick_list)
	stick_list.close()
	stk_rand = randrange(0,(len(file_sticks)-1))
	sticker_id = str(file_sticks[stk_rand])
	sticker_id_g = clean_enter(sticker_id)
	#bot.send_sticker(user_admin,sticker_id_g,reply_to_message_id=message.message_id)
	bot.send_sticker(message.chat.id,sticker_id_g,reply_to_message_id=message.message_id)





#______________________—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è (–ø–æ–∏—Å–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏)__________
def regularfrazesdef(message):
	if message.text.lower() == "+":
		reiting_go(message,"+")
	if message.text.lower() == "üëç":#üëé
		reiting_go(message,"+")
	if message.text.lower() == "üëé":
		reiting_go(message,"-")
	if message.text.lower() == "-":
		reiting_go(message,"-")
#__________actions in bot____________
	try:
		try:
			if 'None' in str(message.reply_to_message.from_user.username):
				reply_user = str(message.reply_to_message.from_user.first_name)
			else:
				reply_user = str(message.reply_to_message.from_user.username)
			if 'None' in str(message.from_user.username):
				main_user = str(message.from_user.first_name)
			else:
				main_user = str(message.from_user.username)
			namehere = 1
		except Exception as e:
			pass #print("ActionsError: ", e)
			namehere = 0
			reply_user = select_fr(regularfrazes.command_names)
			main_user = str(message.from_user.username)
		if '!–æ–±–Ω—è—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.obnimash)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIvfV86YmNsab8IEqfVLyDduCrvhahoAAKxAANLae4Q2IJcTH-TNCYaBA')
			bot.send_message(message.chat.id,fraze_with_names)

		if '!–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.kissing)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIve186YchpJVen5labpfCsOAFS-BSBAAKjCQACS2nuEEf87XUP3NA4GgQ')
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–ø–æ–∂–∞–º–∫–∞—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.jamkat)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–ø–æ–¥–º–∏–≥–Ω—É—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.eyedrift)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
			bot.send_message(message.chat.id,'üòâ')
		if '!—É–∫—É—Å–∏—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.kuskusy)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–∫–æ–º–∞–Ω–¥—ã' in message.text.lower():
			fraze_to_commands = known_fr('commands.ii')
			bot.send_message(message.chat.id,fraze_to_commands)
		if '!–∞–¥–º–∏–Ω–∫–æ–º–∞–Ω–¥—ã' in message.text.lower():
			if rulles(message) == True:
				fraze_to_commands = known_fr('admcommands.ii')
				bot.send_message(message.chat.id,fraze_to_commands)
		if '–º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è' in message.text.lower():
			bot.send_message(message.chat.id,'–≠—Ç–æ —Ç–æ—á–Ω–æ. –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –º–µ—Å—Ç–æ...')
			bot.send_venue(message.chat.id,54.711545, 20.512989,'–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ª–∞–≤–∫–∏ –Ω–∞ –ù–∏–∂–∫–µ.','Historical Center, –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥, –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª., 236006')
		if '!–∫–æ–≤–∏–¥' in message.text.lower():
			covidget(message.chat.id,"–î–∞–Ω–Ω—ã–µ –ø–æ COVID-19\n–≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏:")
		if '!covid' in message.text.lower():
			covidget(message.chat.id,"–î–∞–Ω–Ω—ã–µ –ø–æ COVID-19\n–≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏:")
		if '!–º–µ–º' in message.text.lower():
			memasik(message)
		if '!vtv' in message.text.lower():
			memasik(message)
		if '!mem' in message.text.lower():
			memasik(message)
		if '!—å—É—å' in message.text.lower():
			memasik(message)
		if '!v\'v' in message.text.lower():
			memasik(message)
		if '!–º—ç–º' in message.text.lower():
			memasik(message)
		for hor in goroskop.hor_sign: #–≥–æ—Ä–æ—Å–∫–æ–ø
			if hor in message.text.lower():
				goroskop_find(message)
		#–ø–æ–∏—Å–∫ —Ö–æ—Ç—Ç–∞–±–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
		for xott in config.xottabb_call:
			if xott.lower() in message.text.lower():
				url_xott = 'https://t.me/'+config.group_name+'/'+str(message.message_id)
				bot.send_message(config.user_admin,url_xott)
		kalicalls(message)
		if '!–∑–∞—á–∏—Å—Ç–∏ –º–µ–Ω—è' in message.text.lower():
			if config.user_admin in str(message.from_user.id):
				file_my_messageid = str(message.from_user.id)+'/'+str(message.chat.id)
				o = open(file_my_messageid,'r', encoding = "utf-8")
				list_w_msgid = list(o)
				o.close()
				bot.send_message(message.chat.id,'–í –ø—Ä–æ—Ü–µ—Å—Å–µ...üëåüòé')

				bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvf186Y04jtQ5aLaTxk8pkr5jPUoF5AAL3AAOVyisJUbFxILdSrHsaBA')
				for i in list_w_msgid:
					current_id = clean_enter(i)
					try:
						bot.delete_message(message.chat.id,current_id)
						print ('Deleted message id:  ',current_id)
					except:
						pass
				o = open(file_my_messageid,'w+', encoding = "utf-8")
				o.write(file_my_messageid,'')
				o.close()

			pass
		if '!–ø–Ω—É—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.pinaet)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–ø—Ä–∏–∂–∞—Ç—å—Å—è' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.prijatsya)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!—à–ª–µ–ø–Ω—É—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.shlepok)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–ª–∏–≤–Ω—É—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.livnut)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–æ–±–∏–¥–µ—Ç—å—Å—è' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.obidka)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–≤—ã–ø–∏—Å–∞—Ç—å –ª–µ—â–∞' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.leshadat)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user
			bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIvel86YUf7C7rp7XM6kF39l26vt0HYAAIiAANfxgEZ8_q_s-6jQF4aBA')
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–¥–∞—Ç—å –ø–æ –µ–±–∞–ª—É' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.poibaly)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user+'‚ò†Ô∏è'
			bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIvfF86YhFVxd6dsxBZSM5wVMS6XpFWAAK6AANLae4QLyrtpzRxYGcaBA')
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–æ—Ç–ø–∏–∑–¥–∏—Ç—å' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.poibaly)
			fraze_with_names = '@'+main_user+fraze_to_action_one+'@'+reply_user+'‚ò†Ô∏è'
			bot.send_sticker(message.chat.id,'CAACAgQAAxkBAAIvfF86YhFVxd6dsxBZSM5wVMS6XpFWAAK6AANLae4QLyrtpzRxYGcaBA')
			bot.send_message(message.chat.id,fraze_with_names)
		if '!—É–ª—ã–±–Ω—É—Ç—å—Å—è' in message.text.lower():
			if namehere == 1:
				reply_user = reply_user
			else:
				reply_user = select_fr(regularfrazes.command_names)
			fraze_to_action_one = select_fr(regularfrazes.ulybka)
			fraze_with_names = fraze_to_action_one
			bot.send_message(message.chat.id,fraze_with_names)
		if '!–æ—Ç–∂–∞—Ç—å—Å—è' in message.text.lower():
			bot.send_animation(message.chat.id,'https://i.gifer.com/1AnC.gif')
		if '???' in message.text.lower():
			bot.send_animation(message.chat.id,'http://hostsite.asuscomm.com/wp-content/uploads/2020/08/giphy.mp4')
		if '!–ø—Å–∏—Ö–∞–Ω—É—Ç—å' in message.text.lower():
			bot.send_animation(message.chat.id,'https://i.gifer.com/MbE2.gif')
		if '!—á–∞–π —Å –º—è—Ç–æ–π' in message.text.lower():
			bot.send_animation(message.chat.id,'https://sp.mycdn.me/image?id=873850158649&t=44&plc=WEB&tkn=*jLIdjG5_hOrmiQe-mhc8bZ-WhJ4')
		if '!–ø–æ –∂–æ–ø–µ' in message.text.lower():
			nowgif = select_fr(regularfrazes.pojope)
			bot.send_animation(message.chat.id,nowgif)
		if '–∫—Ä–∞—Å–∏–≤—ã–µ–¥–µ–≤—É—à–∫–∏' in message.text.lower():
			nowgifcoolgirls = select_fr(regularfrazes.hashcoolgirls)
			bot.send_animation(message.chat.id,nowgifcoolgirls)
		if '–¥–µ–≤—É—à–∫–∏–∫—Ä–∞—Å–∏–≤—ã–µ' in message.text.lower():
			nowgifcoolgirls = select_fr(regularfrazes.hashcoolgirls)
			bot.send_animation(message.chat.id,nowgifcoolgirls)
		if '–∫—Ä–∞—Å–∏–≤—ã–µ—É–Ω–∞—Å–¥–µ–≤—É—à–∫–∏' in message.text.lower():
			nowgifcoolgirls = select_fr(regularfrazes.hashcoolgirls)
			bot.send_animation(message.chat.id,nowgifcoolgirls)
		if '–¥–µ–≤—É—à–∫–∏—É–Ω–∞—Å–∫—Ä–∞—Å–∏–≤—ã–µ' in message.text.lower():
			nowgifcoolgirls = select_fr(regularfrazes.hashcoolgirls)
			bot.send_animation(message.chat.id,nowgifcoolgirls)
	except Exception as e:
		print("ActionsErrrror: ", e)
		logging("ERROR_ACTION",e)
		pass
#__________________–ø–æ–≥–æ–¥–Ω–æ-—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏_______________
	try:
		if '!—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞' in message.text.lower():
			url_temp = "http://narodmon.ru/api?cmd=sensorsValues&sensors=34535&uuid=6b490fc3b811077028515b8d1bf2ab63&api_key=f1t3tKsbNbxmZ&lang=ru"
			temp_ken = any_get_all(url_temp)
			#print(str(temp_ken))
			resp = json.loads(temp_ken)["sensors"][0]["value"]
			#print(str(resp))
			modtemp_all = int((str(resp).split("."))[1])
			#print(str(modtemp_all))
			if modtemp_all >= 50:
				temp_all = str(int((str(resp).split("."))[0])+1)
			else:
				temp_all = str((str(resp).split("."))[0])
			if int(temp_all) in [1,21,31,41,51,61,71,81,91]:
				unt_t = " –≥—Ä–∞–¥—É—Å"
			elif int (temp_all) in [2,3,4,22,23,24,32,33,34,42,43,44,52,53,54,62,63,64,72,73,74,82,83,84,92,93,94]:
				unt_t = " –≥—Ä–∞–¥—É—Å–∞"
			else:
				unt_t = " –≥—Ä–∞–¥—É—Å–æ–≤"
			temp_all = "`–í –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ` *"+str(temp_all)+"*`"+unt_t+' –ø–æ –¶–µ–ª—å—Å–∏—é.`'
			#print(str(temp_all))
			bot.send_message(message.chat.id,temp_all,parse_mode="Markdown")

	except Exception as e:
		print("WeatherError: ", e)
		logging("ERROR_WEATHER",e)
		bot.send_message(message.chat.id,'`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ...`',parse_mode="Markdown")

	try:
		if '!–ø–æ–≥–æ–¥–∞' in message.text.lower():
			url_temp = "http://narodmon.ru/api?cmd=sensorsValues&sensors=34535&uuid=6b490fc3b811077028515b8d1bf2ab63&api_key=f1t3tKsbNbxmZ&lang=ru"
			temp_ken = any_get_all(url_temp)
			resp = json.loads(temp_ken)["sensors"][0]["value"]
			modtemp_all = int((str(resp).split("."))[1])
			if modtemp_all >= 50:
				temp_all = str(int((str(resp).split("."))[0])+1)
			else:
				temp_all = str((str(resp).split("."))[0])
			res = requests.get("http://api.openweathermap.org/data/2.5/weather",
						params={'id': '554234', 'units': 'metric', 'lang': 'ru', 'APPID':										 '698628cf3d7857768c93a777115bb876'})
			data = res.json()
			conditions = data['weather'][0]['description']
			temp_weath = temp_all#data['main']['temp']
			temp_min = data['main']['temp_min']
			temp_max = data['main']['temp_max']
			humidity = data['main']['humidity']
			wind = data['wind']['speed']
			pipinclothes = ""
			if int(temp_weath) >= 19 and wind <= 5:
				pipinclothes = '@pipinsorry`, —Å–µ–≥–æ–¥–Ω—è –º–æ–∂–Ω–æ –∏ –≤ —Ñ—É—Ç–±–æ–ª–∫–µ`üëå'
			elif int(temp_weath) <= 18:
				pipinclothes = '@pipinsorry`, –Ω—É –Ω–∞—Ñ–∏–≥. –û–¥–µ–≤–∞–π—Å—è —Ç–µ–ø–ª–µ–µ! –ü–æ–∫–∞ –±–∞–Ω–∞–Ω—á–∏–∫–∏ –Ω–µ –æ—Ç–º–µ—Ä–∑–ª–∏.`'
			elif int(temp_weath) >= 28:
				pipinclothes = '@pipinsorry`, —Ç–∞–º –ø–µ–∫–ª–æ –∏–ø–∞–Ω–æ–µ, –º–æ–∂–Ω–æ –≤–æ–æ–±—â–µ –±–µ–∑ —Ñ—É—Ç–±–æ–ª–∫–∏ –∏–¥—Ç–∏!`üòù'
			elif int(temp_weath) >= 19 and wind >= 5:
				pipinclothes = '@pipinsorry`, —Å–µ–≥–æ–¥–Ω—è –Ω–∞–≤–µ—Ä–Ω–æ–µ –º–æ–∂–Ω–æ –∏ –≤ —Ñ—É—Ç–±–æ–ª–∫–µ`üëå`, –Ω–æ –≤–µ—Ç–µ—Ä–æ–∫ —Å–∏–ª—å–Ω—ã–π. –í –æ–±—â–µ–º, —è –Ω–µ—É–≤–µ—Ä–µ–Ω –∫–∞–∫ 16-–ª–µ—Ç–Ω—è—è –¥–µ–≤–æ—á–∫–∞`üôä'
			elif int(temp_weath) >= 19 and wind >= 5:
				pipinclothes = '@pipinsorry`, —Å–µ–≥–æ–¥–Ω—è –Ω–∞–≤–µ—Ä–Ω–æ–µ –º–æ–∂–Ω–æ –∏ –≤ —Ñ—É—Ç–±–æ–ª–∫–µ`üëå`, –Ω–æ –≤–µ—Ç–µ—Ä–æ–∫ —Å–∏–ª—å–Ω—ã–π. –í –æ–±—â–µ–º, —è –Ω–µ—É–≤–µ—Ä–µ–Ω –∫–∞–∫ 16-–ª–µ—Ç–Ω—è—è –¥–µ–≤–æ—á–∫–∞`üôä'
			else:
				pipinclothes = '@pipinsorry`, –Ω—É –Ω–∞—Ñ–∏–≥. –û–¥–µ–≤–∞–π—Å—è —Ç–µ–ø–ª–µ–µ! –ü–æ–∫–∞ –±–∞–Ω–∞–Ω—á–∏–∫–∏ –Ω–µ –æ—Ç–º–µ—Ä–∑–ª–∏.`üëÄ'
			if '–¥–æ–∂–¥' in str(conditions):
				pipinclothes = pipinclothes+'` –ê –µ—â–µ –∑–æ–Ω—Ç–∏–∫ –≤–æ–∑—å–º–∏ –∏–ª–∏ –∫–∞–ø—é—à–æ–Ω. –°–µ–≥–æ–¥–Ω—è –∫—Ç–æ-—Ç–æ –ø—Ä–æ–º–æ–∫–Ω–µ—Ç.`üòè'
			else:
				pipinclothes = pipinclothes
			str_weather = '_–ü–æ–≥–æ–¥–∞ –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ (–°–µ–π—á–∞—Å):_\nüå°*–¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: '+str(temp_weath)+'¬∞C*\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–º–∏–Ω): '+str(temp_min)+' ¬∞C\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–º–∞–∫—Å): '+str(temp_max)+' ¬∞C\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: '+str(humidity)+' %\nüí®–í–µ—Ç–µ—Ä: '+str(wind)+' –º/—Å\nüå§'+str(conditions)+'\n'+pipinclothes
			bot.send_message(message.chat.id,str_weather,parse_mode="Markdown")
	except Exception as e:
		print("Exception (weather):", e)
		logging("ERROR_(WEATHER)",e)
		bot.send_message(message.chat.id,'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ...')

	try:
		if message.text.lower() == '!–ø—Ä–æ–≥–Ω–æ–∑3':
			res = requests.get("http://api.openweathermap.org/data/2.5/forecast",
						params={'id': '554234', 'units': 'metric', 'lang': 'ru', 'APPID':										 '698628cf3d7857768c93a777115bb876'})
			day=1
			bot.send_message(message.chat.id,'_–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è:_',parse_mode="Markdown")
			while day < 21:
				data = res.json()
				date_weath = data['list'][day]['dt_txt']
				time_weather = date_weath.split(' ')[1]
				if '15:00:00' in time_weather:
					date_weather = date_weath.split(' ')[0]
					hour_weather = time_weather.split(':')[0]
					minut_weather = time_weather.split(':')[1]
					day_weater = date_weather.split('-')[2]
					month_weater = date_weather.split('-')[1]
					year_weater = date_weather.split('-')[0]
					conditions = data['list'][day]['weather'][0]['description']
					temp_weath = data['list'][day]['main']['temp']
					temp_min = data['list'][day]['main']['temp_min']
					temp_max = data['list'][day]['main']['temp_max']
					humidity = data['list'][day]['main']['humidity']
					wind = data['list'][day]['wind']['speed']
					str_weather = '‚è≥'+day_weater+'.'+month_weater+'.'+year_weater+':\nüå°*T¬∞: '+str(temp_weath)+' ¬∞C*\nüå°T¬∞(–¥–Ω—ë–º): '+str(temp_min)+' ¬∞C ... '+str(temp_max)+' ¬∞C\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: '+str(humidity)+' %   üí®–í–µ—Ç–µ—Ä: '+str(wind)+' –º/—Å\nüå§'+str(conditions)
					bot.send_message(message.chat.id,str_weather,parse_mode="Markdown")
				else:
					pass
				day=day+1#8
		if message.text.lower() == '!–ø—Ä–æ–≥–Ω–æ–∑5':
			res = requests.get("http://api.openweathermap.org/data/2.5/forecast",
						params={'id': '554234', 'units': 'metric', 'lang': 'ru', 'APPID':										 '698628cf3d7857768c93a777115bb876'})
			day=1
			bot.send_message(message.chat.id,'_–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π:_',parse_mode="Markdown")
			while day < 37:
				data = res.json()
				date_weath = data['list'][day]['dt_txt']
				time_weather = date_weath.split(' ')[1]
				if '15:00:00' in time_weather:
					date_weather = date_weath.split(' ')[0]
					hour_weather = time_weather.split(':')[0]
					minut_weather = time_weather.split(':')[1]
					day_weater = date_weather.split('-')[2]
					month_weater = date_weather.split('-')[1]
					year_weater = date_weather.split('-')[0]
					conditions = data['list'][day]['weather'][0]['description']
					temp_weath = data['list'][day]['main']['temp']
					temp_min = data['list'][day]['main']['temp_min']
					temp_max = data['list'][day]['main']['temp_max']
					humidity = data['list'][day]['main']['humidity']
					wind = data['list'][day]['wind']['speed']
					str_weather = '‚è≥'+day_weater+'.'+month_weater+'.'+year_weater+':\nüå°*T¬∞: '+str(temp_weath)+' ¬∞C*\nüå°T¬∞(–¥–Ω—ë–º): '+str(temp_min)+' ¬∞C ... '+str(temp_max)+' ¬∞C\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: '+str(humidity)+' %   üí®–í–µ—Ç–µ—Ä: '+str(wind)+' –º/—Å\nüå§'+str(conditions)
					bot.send_message(message.chat.id,str_weather,parse_mode="Markdown")
				else:
					pass
				day=day+1
		if message.text.lower() == '!–ø—Ä–æ–≥–Ω–æ–∑':
			res = requests.get("http://api.openweathermap.org/data/2.5/forecast",
						params={'id': '554234', 'units': 'metric', 'lang': 'ru', 'APPID':										 '698628cf3d7857768c93a777115bb876'})
			day=1
			bot.send_message(message.chat.id,'_–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:_',parse_mode="Markdown")
			while day < 8:
				data = res.json()
				date_weath = data['list'][day]['dt_txt']
				time_weather = date_weath.split(' ')[1]
				date_weather = date_weath.split(' ')[0]
				hour_weather = time_weather.split(':')[0]
				minut_weather = time_weather.split(':')[1]
				day_weater = date_weather.split('-')[2]
				month_weater = date_weather.split('-')[1]
				year_weater = date_weather.split('-')[0]
				conditions = data['list'][day]['weather'][0]['description']
				temp_weath = data['list'][day]['main']['temp']
				temp_min = data['list'][day]['main']['temp_min']
				temp_max = data['list'][day]['main']['temp_max']
				humidity = data['list'][day]['main']['humidity']
				wind = data['list'][day]['wind']['speed']
				str_weather = '‚è≥_'+hour_weather+'—á. '+minut_weather+'–º. '+'  '+day_weater+'.'+month_weater+'.'+year_weater+':_\nüå°*T¬∞: '+str(temp_weath)+' ¬∞C*\nüå°T¬∞(–º–∏–Ω): '+str(temp_min)+' ¬∞C   üå°T¬∞(–º–∞–∫—Å): '+str(temp_max)+' ¬∞C\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: '+str(humidity)+' %   üí®–í–µ—Ç–µ—Ä: '+str(wind)+' –º/—Å\nüå§'+str(conditions)
				bot.send_message(message.chat.id,str_weather,parse_mode="Markdown")
				day=day+2
	except Exception as e:
		print("Exception (weather):", e)
		logging("ERROR_(WEATHER)",e)
		bot.send_message(message.chat.id,'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ...')
#_____________–∫–æ–Ω–µ—Ü –ø–æ–≥–æ–¥–Ω–æ-—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π_____________

#______________—É–±–∏–π—Ü–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ__________________
	if '!pkill' in message.text.lower():
		str_pkill = 'Process named "User" with PID '+str(message.reply_to_message.from_user.id)+' is stopped.'
		xottabbmagic(message,str_pkill,'No processes for kill... Command failed.')
		pkill_list = ['CAACAgIAAx0CSiOOwwACCjdf4FjfxroGNSv2bwXr25PcP9Gb7wACSwIAAsG90QUkcrgqNtoWQR4E','CAACAgIAAx0CSiOOwwACCjVf4FjQy4IqXzL5ozCgfXRnDUHTmgACYAEAAsG90QXagUGr5nJAXR4E','CAACAgIAAx0CSiOOwwACCjNf4Fi_UOEDE4OKE8YpLZ-3rgABH1wAAlEBAALBvdEFfTkYXUspfzkeBA','CAACAgIAAx0CSiOOwwACCjFf4Fi6bgS35M7jP45SBaT5hF3DKwACNAADK-0ZAAGfgIlwL7eH0x4E','CAACAgIAAx0CSiOOwwACCjlf4Fjv0pkbE5mTqioJF6CXZcZVtQACKgADK-0ZAAHwqC4sEu9tlB4E']
		sticker_pkill = str(pkill_list[randrange(0,len(pkill_list)-1)])
		bot.send_sticker(message.chat.id,sticker_pkill)
	if '!—Ñ–∞—Å' in message.text.lower():
		fas(message)
	if '!–≤–∑—è—Ç—å' in message.text.lower():
		fas(message)
	if '!–∑–∞—Ö–≤–∞—Ç' in message.text.lower():
		fas(message)
	if '!–∑–∞–¥–µ—Ä–∂–∞—Ç—å' in message.text.lower():
		fas(message)
	if '–∫–∏–∫—É—Å –º–æ—Ä—Ç–∞–ª–µ' in message.text.lower():
		xottabbmagic(message,'–°–ª—É—à–∞—é—Å—å –∏ –ø–æ–≤–∏–Ω—É—é—Å—å, –≥–æ—Å–ø–æ–¥–∏–Ω Xottabb14!üòá –ü—à–µ–ª –Ω–∞—Ö –æ—Ç—Å—é–¥–∞!ü§¨ –ö–∏—è–∫!','–û, –≤–µ–ª–∏—á–∞–π—à–∏–π –¥–∂–∏–Ω, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∂–µ—Ä—Ç–≤—É!üëÄ')
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIval86WX27ZFNGCHWW5MFB3xHAup-cAAIwBQACH7sgB2q2aN7uN9b8GgQ')
	if '–∞–≤–∞–¥–∞ –∫–µ–¥–∞–≤—Ä–∞' in message.text.lower():
		xottabbmagic(message,'–°–¥–æ—Ö–Ω–∏, –∂–∞–ª–∫–∏–π –º–∞–≥–ª!ü§ì –ö–∏–∫!','–ü–æ–∂–∏—Ä–∞—Ç–µ–ª–∏ —Å–º–µ—Ä—Ç–∏ –æ–¥–æ–±—Ä—è—é—Ç —É–±–∏–π—Å—Ç–≤–æ.‚ò†Ô∏è –¢–æ–ª—å–∫–æ –∫–æ–≥–æ?')
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvZ186WB3w8dSd37p3Ox1dc5gQgTKkAALIAgACz1-LB0wuBy_XOD8bGgQ')
	if '–≤—Å–ø—ã—à–∫—É—Å –≥—Ä–æ–±—É–ª–∏—Å' in message.text.lower():
		xottabbmagic(message,'–®–º—ã–≥—É—Å —Å–º–æ—Ä–∫–∞—Ç–∏—Å! –ò—Å–∫—Ä–∏—Å —Ñ—Ä–æ–Ω—Ç–∏—Å! –ö–æ—Ä–æ—á–µ, —Å–¥–æ—Ö–Ω–∏!üí©','–ö–æ–ª–µ—á–∫–æ –Ω–∞–≥–æ—Ç–æ–≤–µ. –û—Å—Ç–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ª–æ–ø—É—Ö–æ–∏–¥–∞ –¥–ª—è –∫–∏–∫–∞...üëª')
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvaF86WMZjazj4JaO0jrRq4lT-9rkxAALYAQACygMGC4QG-q8znjA4GgQ')
	if '–ø–µ—Ä–µ–µ–±—É—Å –ø–æ–µ–±–∞–ª—É—Å' in message.text.lower():
		xottabbmagic(message,'–ù–∞—Ö#–π –æ—Ç—Å—é–¥–∞!!!!ü§¨ü§¨ü§¨','–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ. –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è –Ω–∞–¥–æ —é–∑–∞—Ç—å –Ω–∞ –∫–æ–º —Ç–æ –∏–∑ —ç—Ç–∏—Ö –º–µ—Ä–∑–∫–∏—Ö –ª—é–¥–∏—à–µ–∫. –í—ã–±–∏—Ä–∞–π—Ç–µ, —Å—ç—Ä!üòè')
		bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAIvaV86WP6yH-QhtHBm6jEXIiASemiyAAJeAgACPnKoEbwfe6eMUUkyGgQ')
	if '–ø—Ä–æ—Å—Ç–æ–∏–¥–∏–Ω–∞—Ö—É–π' in message.text.lower():
		xottabbmagic(message,'–ü—Ä–æ—Å—Ç–æ –∏–¥–∏ –Ω–∞ —Ö—É–π –æ—Ç—Å—é–¥–∞!!!! –ó–∞–µ–±–∞–ª–∏!!!ü§¨ü§¨ü§¨','–ù–∞ —Ö—É–π –Ω–∞–¥–æ —Å–ª–∞—Ç—å –∫–æ–≥–æ-—Ç–æ, –∞ –Ω–µ –≤ –ø—É—Å—Ç–æ—Ç—É –ø–∏—Å—å–∫–æ–π –±–æ–ª—Ç–∞—Ç—å!üòè')
		bot.send_sticker(message.chat.id,'CAACAgIAAx0CSiOOwwACB3tfs8uL1l3iVxaFlmB1WY0aoPX9aQACxAIAAladvQotLPt8J_pZMR4E')
	if '–ø—Ä–æ—Å—Ç–æ–Ω–∞—Ö—É–π' in message.text.lower():
		xottabbmagic(message,'–ü—Ä–æ—Å—Ç–æ –∏–¥–∏ –Ω–∞ —Ö—É–π –æ—Ç—Å—é–¥–∞!!!! –ó–∞–µ–±–∞–ª–∏!!!ü§¨ü§¨ü§¨','–ù–∞ —Ö—É–π –Ω–∞–¥–æ —Å–ª–∞—Ç—å –∫–æ–≥–æ-—Ç–æ, –∞ –Ω–µ –≤ –ø—É—Å—Ç–æ—Ç—É –ø–∏—Å—å–∫–æ–π –±–æ–ª—Ç–∞—Ç—å!üòè')
		bot.send_sticker(message.chat.id,'CAACAgIAAx0CSiOOwwACB3tfs8uL1l3iVxaFlmB1WY0aoPX9aQACxAIAAladvQotLPt8J_pZMR4E')
	if '!–æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω–æ' in message.text.lower():
		badcontent(message)
	if '!jndhfnbntkmyj' in message.text.lower():
		badcontent(message)
	if '!ufdyj' in message.text.lower():
		badcontent(message)
	if '!–≥–∞–≤–Ω–æ' in message.text.lower():
		badcontent(message)
	if '!—É–¥–æ–ª–∏' in message.text.lower():
		if rulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
		if modrulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
	if '!—É–¥–∞–ª–∏' in message.text.lower():
		if rulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
		if modrulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
	if '!del' in message.text.lower():
		if rulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
		if modrulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
	if '!delete' in message.text.lower():
		if rulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass
		if modrulles(message) == True:
			try:
				delmessage(message)
			except:
				bot.send_message(message.chat.id,'–ß—Ç–æ —É–¥–û–ª—è—Ç—å —Ç–æ?ü§¶‚Äç‚ôÇÔ∏è')
		else:
			pass

	#_____________________antispam!!!!!!!!!!!!!!!!!!!!!!!
	f_spam = open('spamtext.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
	spam_strings = list(f_spam)
	f_spam.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	for spm in spam_strings:
		spm_noent = clean_enter(spm)
		if spm_noent.lower() in message.text.lower():#'–Ω—É–∂–Ω—ã –ª—é–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å –±–∫ –∏ –∫–∞–∑–∏–Ω–æ'
			try:
				kickspamer(message)
			except:
				pass
	f_porn = open('porntext.ii', "r", encoding = "utf-8")
	porn_strings = list(f_porn)
	f_porn.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
	for porn in porn_strings:
		porn_noent = clean_enter(porn)
		if porn_noent.lower() in message.text.lower():#'–Ω—É–∂–Ω—ã –ª—é–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å –±–∫ –∏ –∫–∞–∑–∏–Ω–æ'
			try:
				bot.delete_message(message.chat.id,message.message_id)
			except:
				pass
	if '–∞–ª–∏—Ö–∞–Ω–æ–≤' in message.text.lower():
		alixanov_list = ['CAACAgIAAxkBAAI0G19JAAEx8-ydkd5JXg0_jJH_MBR5IQACSgUAAh-7IAdtSP_3sVw12BsE','CAACAgIAAxkBAAI0HF9JAAEzzzfKmlZRvmtNrqfbRoxq6QACTAUAAh-7IAc9yZxprfK3PxsE']
		alixanov_stckr = select_fr(alixanov_list)
		bot.send_sticker(message.chat.id,alixanov_stckr)
	if '–∑–¥—Ä–∞—Å—Ç–µ' in message.text.lower():
		bot.send_sticker(message.chat.id,'CAACAgIAAx0CSiOOwwACCc9f0kC7-QUgUPC7h4Xcq_u5hd9h7QACvQEAAodOegRZ-IPv6UwfFR4E',reply_to_message_id=message.message_id)
	if '–∑–¥—Ä–∞—Å—Ç–∏' in message.text.lower():
		bot.send_sticker(message.chat.id,'CAACAgIAAx0CSiOOwwACCc9f0kC7-QUgUPC7h4Xcq_u5hd9h7QACvQEAAodOegRZ-IPv6UwfFR4E',reply_to_message_id=message.message_id)
	try:
		if config.test_chat	in str(message.chat.id):
			if 'CAACAg' in str(message.text):
				try:
					list_idsh = str(message.text).split('\n')
					if len(list_idsh)>=1:
						for i in list_idsh:
							bot.send_sticker(config.test_chat,str(i))
							bot.send_message(config.test_chat,(i))
				except:
					idsh = str(message.text).replace('\n','')
					bot.send_sticker(config.test_chat,str(idsh),reply_to_message_id=message.message_id)
	except:
		pass
	if '–≤—ã—Ö–æ–¥–Ω–æ–π' in message.text.lower():
		weekdayss = select_fr(regularfrazes.weekdays)
		if int(datetime.datetime.today().weekday()) < 5:
			#print (int(datetime.datetime.today().weekday()))
			bot.send_message(message.chat.id,weekdayss,reply_to_message_id=message.message_id)
			#bot.send_message(user_admin,weekdayss,reply_to_message_id=message.message_id)
		else:
			pass
	if '!—É—Ç–∏—Ö–æ–º–∏—Ä–∏—Ç—å' in message.text.lower():
		timeban(message,1800,'30')
	if '!—É–≥–æ–º–æ–Ω–∏—Ç—å' in message.text.lower():
		timeban(message,1800,'30')
	if '!–±–µ—Å–∏—à—å' in message.text.lower():
		timeban(message,300,'5')
	if '!–Ω–∞—Ö—É–π' in message.text.lower():
		timeban(message,300,'5')
	if '!–Ω–∞ —Ö—É–π' in message.text.lower():
		timeban(message,300,'5')
	if '!–∑–∞—Ç–∫–Ω–∏—Å—å' in message.text.lower():
		timeban(message,600,'10')
	if '!—Å–ª–∞–¥–∫–∏—Ö–ø—É–ø—Å–∏–∫' in message.text.lower():
		timeban(message,28800,'480')
	if '!–∞–π–¥–∏—à–Ω–∏–∫' in message.text.lower():
		try:
			if rulles(message) == True:
				bot.send_message(message.from_user.id,message.reply_to_message.from_user.id)
				bot.send_message(message.chat.id,'–ê–≥–∞, —Å–∫–∏–Ω—É–ª. –ì–ª—è–Ω—å –≤ –ª–∏—á–∫—É...',reply_to_message_id=message.message_id)
		except:
			pass
	if '!–≤–µ—Ä–Ω–∏' in message.text.lower():
		try:
			if rulles(message) == True:
				bot.restrict_chat_member(chat_idwork,message.reply_to_message.from_user.id,can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)
				bot.send_message(message.chat.id,'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω...',reply_to_message_id=message.message_id)
			else:
				bot.send_message(message.chat.id,'–ù–µ –ø–æ–ª–æ–∂–µ–Ω–æ!',reply_to_message_id=message.message_id)
		except:
			pass
	if '!—Ä–∞–∑–±–∞–Ω—å' in message.text.lower():
		try:
			if rulles(message) == True:
				bot.restrict_chat_member(chat_idwork,message.reply_to_message.from_user.id,can_send_messages=True,can_send_media_messages=True,can_send_other_messages=True,can_add_web_page_previews=True)
				bot.send_message(message.chat.id,'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω...',reply_to_message_id=message.message_id)
			else:
				bot.send_message(message.chat.id,'–ù–µ –ø–æ–ª–æ–∂–µ–Ω–æ!',reply_to_message_id=message.message_id)
		except:
			pass
	meeteng_io_meet = known_fr('meetIO.ii')
	if meeteng_io_meet == "ON":
		meeterid = known_fr('meeter.ii')
		if int(meeterid) == int(message.from_user.id):
			if '–æ—Ç–º–µ–Ω–∞' in message.text.lower():
				known_fw('OFF','meetIO.ii')
				bot.send_message(message.chat.id,"–û–∫. –í—Å—Ç—Ä–µ—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
			else:
				date_meet_now = known_fr('daymeet.ii')
				name_meeter = "Anonim"
				if "None" in str(message.from_user.username):
					name_meeter = '#'+str(message.from_user.first_name)
				else:
					name_meeter = '@'+str(message.from_user.username)
				location_meet = message.text
				message_meet_ended = message_meet_ended = '–í–Ω–∏–º–∞–Ω–∏–µ! –û–±—ä—è–≤–ª–µ–Ω–∞ —Å—Ö–æ–¥–∫–∞!\nüòé–í—Å—Ç—Ä–µ—á—É –Ω–∞–∑–Ω–∞—á–∏–ª(–∞): '+name_meeter+'\n‚è∞–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏: '+date_meet_now+'\nüìå–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: '+location_meet+'\nüëå–ü–æ–π—Ç–∏ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å:\n'+name_meeter
				keyboard_igo = types.InlineKeyboardMarkup()
				igo_butt = types.InlineKeyboardButton(text='–Ø –±—É–¥—Éüëª', callback_data='igomeet')
				keyboard_igo.add(igo_butt)
				bot.send_message(message.chat.id,message_meet_ended,reply_markup=keyboard_igo)
				mse_id = str(int(message.message_id)+1)
				known_fw(mse_id,'MSGforEditMeet.ii')
				known_fw(message_meet_ended,'MSGfortextMeet.ii')
				known_fw('OFF','meetIO.ii')
				bot.pin_chat_message(message.chat.id, mse_id, disable_notification=True)
		else:
			pass#print ('notOK')
	else:
		pass
#main___reactions_____
def main_iishka_reaction(message):
		if '–∏–ª–∏' in message.text.lower():
			or_text = clean_iishka (message.text)
			or_textSym = clean_text (or_text)
			or_textL = or_textSym.split(' –∏–ª–∏ ')
			or_rand = randrange(0,2)
			or_startss = select_fr(regularfrazes.or_starts)
			or_fraze =or_startss+str(or_textL[or_rand])
			bot.send_message(message.chat.id,or_fraze,reply_to_message_id=message.message_id)
		elif 'or' in message.text.lower():
			or_text = clean_iishka (message.text)
			or_textSym = clean_text (or_text)
			or_textL = or_textSym.split(' or ')
			or_rand = randrange(0,2)
			or_startss = select_fr(regularfrazes.or_starts)
			or_fraze =or_startss+str(or_textL[or_rand])
			bot.send_message(message.chat.id,or_fraze,reply_to_message_id=message.message_id)
		elif '–∑–∞–ø–∏—à–∏ –≤ –ø–∞–º—è—Ç' in message.text.lower():
			text_to_write = '>>>'+message.reply_to_message.text+'\n'
			f = open('memory.ii', "a", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –¥–æ–∑–∞–ø–∏—Å–∏
			f.write(text_to_write)
			f.close()
			text_to_writeN = '`–ó–∞–ø–∏—Å–∞–ª —Å–ª–µ–¥—É—é—â–µ–µ: `'+clean_enter(text_to_write)
			bot.send_message(message.chat.id,text_to_writeN,reply_to_message_id=message.message_id,parse_mode="Markdown")
		elif '–ø–∞–º—è—Ç—å —á–∞—Ç–∞' in message.text.lower():
			f = open('memory.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
			mem_string = f.read()
			mem_stringpl = '`–í –ø–∞–º—è—Ç–∏ —á–∞—Ç–∞ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏:`\n'+mem_string
			f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
			bot.send_message(message.chat.id,mem_stringpl,reply_to_message_id=message.message_id,parse_mode="Markdown")
		elif '—É–¥–∞–ª–∏ –∏–∑ –ø–∞–º—è—Ç–∏' in message.text:
			f = open('memory.ii', "r", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
			del_string = f.read()
			f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
			rep_string = (message.text).replace('—É–¥–∞–ª–∏ –∏–∑ –ø–∞–º—è—Ç–∏ ', '')
			rep_stringg = '>>>'+clean_iishka(rep_string)+'\n'
			f = open('memory.ii', "w+", encoding = "utf-8") #–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
			wr_string = del_string.replace(rep_stringg, '')
			f.write(wr_string)
			f.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
			bot.send_message(message.chat.id,'–£–¥–∞–ª–∏–ª –Ω–∞—á–∏—Å—Ç–æüòé',reply_to_message_id=message.message_id)
		else:
			word_list(message)
#–±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=["text"])
def search_namebot(message):
	try:
		if '-484910233' in str(message.chat.id):
			bot.send_message(chat_idwork,message.text)
		#print (message.text,'   ',message.message_id)
		if user_admin in str(message.chat.id):
			print (message.text)
		if rulles(message) == True:
			mymessageid = str(message.message_id)+'\n'
			file_my_messageid = str(message.from_user.id)+'/'+str(message.chat.id)
			o = open(file_my_messageid,'a', encoding = "utf-8")
			o.write(mymessageid)
			o.close()
		
		if '–∏–∏—à–∫–∞' in message.text.lower(): #'–ò–ò—à–∫–∞' in - –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥–µ message, —á—Ç–æ–±—ã –æ—Ç–∫–ª–∏–∫–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∏–º—è
			main_iishka_reaction(message)
		else:
			try:
				#bot.send_message(user_admin,str(message.reply_to_message.from_user.username))
				if "iishka_bot" in str(message.reply_to_message.from_user.username):
					main_iishka_reaction(message)
				else:
					pass
			except Exception as e:
				pass#bot.send_message(user_admin,str(e))
		regularfrazesdef(message)
	except Exception as e:
		print("ExceptionALL: ", e)
		logging("ERROR_ALL",e)

#–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π cron
def new_year_cron(chat_chron_id,timedate_tocron):
	while True:
		try:
			h_cron = int(time.strftime("%H", time.localtime()))+7 #—Ç–µ–∫—É—â–∏–π —á–∞—Å
			m_cron = int(time.strftime("%M", time.localtime())) #—Ç–µ–∫—É—â–∞—è –º–∏–Ω—É—Ç–∞
			month_chrom = int(time.strftime("%m", time.localtime())) #—Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
			day_chrom = int(time.strftime("%d", time.localtime())) #—Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
					
			if h_cron == int(timedate_tocron[0]) and m_cron == int(timedate_tocron[1]):
				if month_chrom == int(timedate_tocron[3]) and day_chrom == int(timedate_tocron[2]):
					nowgif = 'BQACAgIAAxkBAAJlhF_jpdlutPJxspqoCIlhan_WgpKKAAIUCAAC6M4gS_k_eWC2OeGOHgQ'
					bot.send_animation(chat_chron_id,nowgif)
					ny_str = readfile('newyear.txt')
					bot.send_message(chat_chron_id,ny_str,parse_mode="Markdown")
					bot.send_audio(chat_chron_id,'CQACAgIAAxkBAAJlbF_jktCNw3XiT2bBNNqq-B7ZFBxDAAKnCgAC6M4YS_8oEh0Z2n98HgQ')
		except Exception as err:
			print ('CRON ERROR NY:>>>>>>>  ',str(err))
			logging("ERROR_CRON_NY",err)
		time.sleep(60)

def covid_cron(chat_chron_id,h_act,m_act):
	while True:
		try:
			h_cron = int(time.strftime("%H", time.localtime()))+7
			m_cron = int(time.strftime("%M", time.localtime()))
			
			if h_cron == h_act and m_cron == m_act:
				covid(chat_chron_id,"–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ COVID-19\n–≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏:")
		except Exception as err:
			print ('CRON ERROR:>>>>>>>  ',str(err))
			logging("ERROR_CRON",err)
		time.sleep(60)
#–ö–æ–≤–∏–¥–Ω—ã–π —Ö—Ä–æ–Ω –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ñ–∏–≥–µ
if config.covid_eday == 1:
	p = Process(target=covid_cron, args=(chat_idwork,15,10))
	p.start()
else:
	print('Cron Covid Stoped...')

timedate_tocron = ['00','00','01','01','2021'] #–≤—Ä–µ–º—è —Å—Ä–∞–±–æ—Ç–∫–∏ —Ö—Ä–æ–Ω–∞ –¥–ª—è –ù–ì –ß–ß,–ú–ú,–î–î,–ú–°,–ì–ì
#timedate_tocron = ['20','59','23','12','2020'] #–≤—Ä–µ–º—è —Å—Ä–∞–±–æ—Ç–∫–∏ —Ö—Ä–æ–Ω–∞ –¥–ª—è –ù–ì
pny = Process(target=new_year_cron, args=(chat_idwork,timedate_tocron)) #args=(chat_idwork,15,10))
pny.start()

while True:
	try:
		if __name__ == '__main__':
			#wakie_time_bud()
			bot.polling(none_stop=True) #–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º
	except Exception as err:
		print ('Its bad moment with ERROR:>>>>>>>  ',str(err))
		logging("ERROR_CRITICAL",err)
